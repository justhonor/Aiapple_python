<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 特性分析 · innodb buffer pool相关特性</title>
  <meta name="description" content="背景innodb buffer pool做为innodb最重要的缓存，其缓存命中率的高低会直接影响数据库的性能。因此在数据库发生变更，比如重启、主备切换实例迁移等等，innodb buffer poll 需要一段时间预热，期间数据库的性能会受到明显影响。另外mysql 5.7以前innodb buffer poo...">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/05/04/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/05">
    <h1>数据库内核月报 － 2016 / 05</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2016/05/03/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/05/05/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/01/" target="_blank">
                
                MySQL · 引擎特性 · 基于InnoDB的物理复制实现
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/02/" target="_blank">
                
                MySQL · 特性分析 · MySQL 5.7新特性系列一
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/03/" target="_blank">
                
                PostgreSQL · 特性分析 · 逻辑结构和权限体系
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/05/04/" target="_blank">
                
                MySQL · 特性分析 · innodb buffer pool相关特性
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/05/" target="_blank">
                
                PG&GP · 特性分析 · 外部数据导入接口实现分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/06/" target="_blank">
                
                SQLServer · 最佳实践 · 透明数据加密在SQLServer的应用
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/07/" target="_blank">
                
                MySQL · TokuDB · 日志子系统和崩溃恢复过程
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/08/" target="_blank">
                
                MongoDB · 特性分析 · Sharded cluster架构原理
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/09/" target="_blank">
                
                PostgreSQL · 特性分析 · 统计信息计算方法
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/10/" target="_blank">
                
                MySQL · 捉虫动态 · left-join多表导致crash
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 特性分析 · innodb buffer pool相关特性
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>背景</h2>
<p>innodb buffer pool做为innodb最重要的缓存，其缓存命中率的高低会直接影响数据库的性能。因此在数据库发生变更，比如重启、主备切换实例迁移等等，innodb buffer poll 需要一段时间预热，期间数据库的性能会受到明显影响。<br />
另外mysql 5.7以前innodb buffer pool缓存大小修改不是动态的，重启才能生效。因此innodb buffer pool的预热和innodb buffer pool大小的动态修改，对性能要求较高的应用来说是不错的特性，下面我来看看这两个特性的具体实现。</p>

<h2>buffer pool 预热</h2>
<p>MySQL 5.6以后支持buffer pool预热功能。引入了以下参数, 参数具体含义参见<a href="http://dev.mysql.com/doc/refman/5.6/en/mysqld-option-tables.html">官方文档</a>。</p>

<pre><code>innodb_buffer_pool_load_now
innodb_buffer_pool_dump_now
innodb_buffer_pool_load_at_startup
innodb_buffer_pool_dump_at_startup
innodb_buffer_pool_filename
</code></pre>
<p>buffer pool预热分为dump过程和load过程，均由后台线程buf_dump_thread完成。<br />
比如用户发起set命令</p>

<pre><code>set global innodb_buffer_pool_dump_now=on;
set global innodb_buffer_pool_load_now=on;
</code></pre>
<p>set 命令会立刻返回，具体操作由buf_dump_thread来实现。</p>

<ul>
  <li>
    <p>dump 过程</p>

    <p>锁buf_pool<br />
遍历LRU链表，将(space, pageno) 先收集到数组<br />
释放锁<br />
再将数据写入innodb_buffer_pool_filename定有的文件中</p>
  </li>
  <li>
    <p>load过程</p>

    <p>从文件读入数组<br />
按（space,pageno)排序数据<br />
依次同步读取页到buffer pool中</p>
  </li>
</ul>

<p>dump过程一般比较快，而load过程相对要慢些。</p>

<p>通过<code>Innodb_buffer_pool_dump_status</code>、<code>Innodb_buffer_pool_load_status</code>可查看dump/load的状态</p>

<p>另外5.7引入了performance_schema.events_stages_current来显示load进度，每load 32M会更新一条进度信息</p>

<pre><code>select * from performance_schema.events_stages_current;
THREAD_ID       19
EVENT_ID        1367
END_EVENT_ID    NULL
EVENT_NAME      stage/innodb/buffer pool load
SOURCE  buf0dump.cc:619
TIMER_START     33393877311000
TIMER_END       33398961258000
TIMER_WAIT      5083947000
WORK_COMPLETED  0
WORK_ESTIMATED  1440
NESTING_EVENT_ID        NULL
NESTING_EVENT_TYPE      NULL
</code></pre>
<p>WORK_ESTIMATED表示总page数<br />
WORK_COMPLETED表示当前已load page数</p>

<p>dump文件的数据格式如下</p>

<pre><code>#cat ib_buffer_pool |more
0,7
0,1
0,3
0,2
0,4
0,11
0,5
0,6
</code></pre>

<p>dump文件比较简单，我们可以编辑此文件来预加载指定page,比较灵活。</p>

<h2>buffer pool 动态调整大小</h2>
<p>5.7 开始支持buffer pool 动态调整大小，每个<code>buffer_pool_instance</code>都由同样个数的chunk组成(chunks数组), 每个chunk内存大小为<code>innodb_buffer_pool_chunk_size</code>(实际会偏大5%，用于存放chuck中的block信息)。buffer pool以<code>innodb_buffer_pool_chunk_size</code>为单位进行动态增大和缩小。调整前后<code>innodb_buffer_pool_size</code>应一直保持是<code>innodb_buffer_pool_chunk_size</code>*<code>innodb_buffer_pool_instances</code>的倍数。</p>

<p>同样的buffer pool动态调整大小由后台线程<code>buf_resize_thread</code>,set命令会立即返回。通过<code>InnoDB_buffer_pool_resize_status</code>可以查看调整的运行状态。</p>

<ul>
  <li>
    <p>resize流程</p>

    <ul>
      <li>
        <p>如果开启了AHI，需禁用AHI</p>
      </li>
      <li>如果是收缩内存
        <ol>
          <li>计算需收缩的chunk数， 从chunks开始尾部删除指定个数的chunk.</li>
          <li>锁buf_pool</li>
          <li>从free_list中摘除待删chunk的page放入待删链表buf_pool-&gt;withdraw</li>
          <li>如果待删chunk的page为脏页，则刷脏</li>
          <li>重新加载LRU中要删除的页，从LRU中摘除，重新从free列表获取page老的page放入待删链表buf_pool-&gt;withdraw</li>
          <li>释放buffer pool锁</li>
          <li>如果需收缩的chunk pages没有收集全，重复2-6</li>
        </ol>
      </li>
      <li>开始resize
        <ol>
          <li>锁住所有instance的buffer_pool，page_hash</li>
          <li>收缩pool：以chunk为单位释放要收缩的内存</li>
          <li>清空withdraw列表buf_pool-&gt;withdraw</li>
          <li>增大pool:分配新的chunk</li>
          <li>重新分配buf_pool-&gt;chunks</li>
          <li>如果改变/缩小超过2倍，会重置page hash，改变桶大小</li>
          <li>释放buffer_pool,page_hash锁</li>
          <li>如果改变/缩小超过2倍,会重启和buffer pool大小相关的内存结构，如锁系统(lock_sys_resize)，AHI(btr_search_sys_resize), 数据字段(dict_resize)等</li>
        </ol>
      </li>
      <li>如果禁用了AHI，此时开启</li>
    </ul>
  </li>
</ul>

<p>由上可以看出，扩大内存比缩小内存相对容易些。缩小内存时，如果遇到有事务一直未提交且占用了待收缩的page时，导致收缩一直重试，error log会打印这种重试信息，<br />
包含可能引用此问题的事务信息。为了避免频繁重试，每次重试的时间间隔会指数增长。</p>

<p>以上步骤中resize阶段buffer pool会不可用，此阶段会锁所有buffer pool, 但此阶段都是内存操作，时间比较短。收缩内存阶段耗时可能会很长，也有一定影响，但是每次都是以instance为单位进行锁定的。<br />
总的来说，buffer pool 动态调整大小对应用的影响并不大。</p>

<ul>
  <li>
    <p>重新加载LRU中要删除的页的影响</p>

    <p>search 过程中btr游标保存的page可能重新加载过，自适应哈希保存的root page也可能重新加载过, 都需要重新读取。</p>
  </li>
</ul>

<h2>总结</h2>
<p>buffer pool 预热 和buffer pool 动态调整大小，这两功能相辅相承的。buffer pool 动态调整大小只适用于实例在主机本地升级的情况，如果用户修改buffer pool大小，同时涉及跨机迁移，那么buffer pool 预热功能就排上用场了。<br />
另外buffer pool 动态调整尽量在业务低锋时进行。</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
