<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 引擎介绍 · Sphinx源码剖析（一）</title>
  <meta name="description" content="介绍">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/11/05/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/11">
    <h1>数据库内核月报 － 2016 / 11</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2016/11/04/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/11/06/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/01/" target="_blank">
                
                PgSQL · 特性分析 · 金融级同步多副本分级配置方法
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/02/" target="_blank">
                
                MySQL · myrocks · myrocks之事务处理
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/03/" target="_blank">
                
                MySQL · TokuDB · rbtree block allocator
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/04/" target="_blank">
                
                MySQL · 引擎特性 · Column Compression浅析
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/11/05/" target="_blank">
                
                MySQL · 引擎介绍 · Sphinx源码剖析（一）
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/06/" target="_blank">
                
                PgSQL · 特性分析 · PostgreSQL 9.6 如何把你的机器掏空
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/07/" target="_blank">
                
                PgSQL · 特性分析 · PostgreSQL 9.6 让多核并行起来
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/08/" target="_blank">
                
                MSSQL · 最佳实战 · 巧用COLUMNS_UPDATED获取数据变更
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/09/" target="_blank">
                
                PgSQL · GIS应用 · 物流, 动态路径规划
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/11/10/" target="_blank">
                
                PgSQL · 特性分析· JIT 在数据仓库中的应用价值
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 引擎介绍 · Sphinx源码剖析（一）
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>介绍</h2>

<p>Sphinx是一个全文索引引擎，他被设计为可以非常简单方便的与各种数据库(mysql,PG…)进行交互。它提供了两种读取接口，a) sphinx自己实现的mysql协议的接口, SphinxQL。b) 各种语言客户端的接口,也就是native搜索API. c) 也可以直接通过mysql server的一个存储引擎插件来访问, SphinxSE.</p>

<p>接下来我们会有一些列文章来分析Sphinx的设计以及源码实现。</p>

<p>本篇是第一篇，主要是简要的介绍Sphinx的源码结构，设计以及索引文件的构成。我们当前分析的代码版本是sphinx-2.3.2-beta.tar.gz.</p>

<h2>源码结构</h2>

<p>sphinx的源码结构比较简单，下面主要是一些比较重要的目录:</p>

<ul>
  <li>api 这个目录主要是包含了各种sphinx的native客户端.</li>
  <li>config 这个目录包含了configure需要的一些文件.</li>
  <li>cmake 这个目录包含了cmake构建需要的一些模块(当前Sphinx支持两种构建模式).</li>
  <li>mysqlse 这个目录包含了SphinxSE</li>
  <li>src 这个目录就是最主要的源码目录。</li>
  <li>src/http search服务的http接口</li>
</ul>

<p>Sphinx最终会生成4个可执行文件，分别是:</p>

<ul>
  <li>indexer 主要是操作索引文件，比如合并索引，重新构建索引等等</li>
  <li>indextool dump索引的一些信息，比如统计信息等</li>
  <li>searchd 搜索服务</li>
  <li>spelldump 拼写检查的工具</li>
</ul>

<p>我们先来看Sphinx源码的CmakeFiles（src/CMakeLists.txt) ：</p>

<pre><code>set (LIBSPHINX_SRCS sphinx.cpp sphinxexcerpt.cpp
		sphinxquery.cpp sphinxsoundex.cpp sphinxmetaphone.cpp
		sphinxstemen.cpp sphinxstemru.cpp sphinxstemcz.cpp
		sphinxstemar.cpp sphinxutils.cpp sphinxstd.cpp
		sphinxsort.cpp sphinxexpr.cpp sphinxfilter.cpp
		sphinxsearch.cpp sphinxrt.cpp sphinxjson.cpp
		sphinxaot.cpp sphinxplugin.cpp sphinxudf.c
		sphinxqcache.cpp sphinxrlp.cpp)
set (INDEXER_SRCS indexer.cpp)
set (INDEXTOOL_SRCS indextool.cpp)
set (SEARCHD_SRCS searchd.cpp searchdha.cpp http/http_parser.c searchdhttp.cpp)
set (SPELLDUMP_SRCS spelldump.cpp)
...
add_library (libsphinx STATIC ${LIBSPHINX_SRCS} ${HEADERS} ${GHEADERS})
</code></pre>

<p>通过上面的构建文件我们可以看到4个可执行文件对应4个源文件(除了搜索服务，searchdha.cpp是分布式搜索，searchdhttp.cpp是搜索服务的http接口实现).剩下的源代码都会被编译为一个libsphinx的库.</p>

<p>因此下面简单介绍下libsphinx的几个文件主要作用:</p>

<ul>
  <li>sphinx.cpp 核心的文件，一些核心功能的实现都在这里，比如读写索引文件，比如搜索的核心方法</li>
  <li>sphinxexcerpt.cpp  生成excerpt</li>
  <li>sphinxquery.cpp 处理query</li>
  <li>sphinxstemen.cpp  sphinxstemru.cpp sphinxstemcz.cpp sphinxstemar.cpp 各种语言的解析器</li>
  <li>sphinxutils.cpp 一些工具函数，比如读写文件，日志，动态库等</li>
  <li>sphinxstd.cpp 库函数，实现了很多基本数据结构，比如 list/vector 等</li>
  <li>sphinxexpr.cpp 处理搜索的query</li>
  <li>sphinxfilter.cpp 处理query的filter</li>
  <li>sphinxsearch.cpp 核心的搜索处理函数</li>
  <li>sphinxrt.cpp rt index的实现</li>
  <li>sphinxjson.cpp json的处理</li>
</ul>

<h2>压缩格式</h2>

<p>以RT索引为例，sphinx会有配置来决定内存中的索引大小(rt_mem_limit)，超过这个大小后，sphinx将会把内存索引刷新到磁盘中。接下来我们就来看sphinx的索引的含义以及原始格式。</p>

<p>在Sphinx中所有的索引最终都是被压缩的，压缩算法比较简单，要么是delta encoding, 要么是VLB(variable length byte string):</p>

<ul>
  <li>delta encoding
    <ul>
      <li>主要用来保存递增的一个序列，每一个元素都保存和前一个元素的差值。这种压缩更高效，结果更小(比起VLB) 比如：</li>
    </ul>
  </li>
</ul>

<pre><code>	source-sequence = 3, 5, 7, 11, 13, 17, ...
	delta-encoded = 3, 2, 2, 4, 2, 4, ...
</code></pre>

<ul>
  <li>VLB
    <ul>
      <li>将一个固定大小(34/64)的整数值转换为一个字符串，每个字节分为高1位和低七位，最高位表示当前是否解析结束，低7位表示压缩的值，原理很简单，那么就是对于大多数整数来说,不需要完整的8个字节(或者4个字节)来表示一个整数，因为没有那么大。而由于是每次移动7位，那么对于最高位为1的情况也可以处理(因为每次移动完毕的最高位都是无意义的值)。</li>
      <li>例子:</li>
    </ul>
  </li>
</ul>

<pre><code>	source-value = 0x37
	encoded-value = 0x37

	source-value = 0x12345
	encoded-value = 0x84 0xC6 0x45
		// 0x84 == ( ( 0x12345&gt;&gt;14 ) &amp; 0x7F ) | 0x80
		// 0xC6 == ( ( 0x12345&gt;&gt;7 ) &amp; 0x7F ) | 0x80
		// 0x45 == ( ( 0x12345&gt;&gt;0 ) &amp; 0x7F )
</code></pre>

<ul>
  <li>下面我们来看代码，对应的函数是CSphReader::UnzipInt以及CSphWriter::ZipInt，其中前一个是解压缩，后一个是压缩。<br />
先来看压缩, DWORD可以简单地认为是int64_t,代码比较简单，首先先计算可以用几个字节来保存当前的数(iBytes),然后循环的保存每个字节:</li>
</ul>

<pre><code>void CSphWriter::ZipInt ( DWORD uValue )
{
	int iBytes = 1;

	DWORD u = ( uValue&gt;&gt;7 );
	while ( u )
	{
		u &gt;&gt;= 7;
		iBytes++;
	}

	while ( iBytes-- )
		PutByte (
			( 0x7f &amp; ( uValue &gt;&gt; (7*iBytes) ) )
			| ( iBytes ? 0x80 : 0 ) );
}
</code></pre>

<p>然后是解压缩，刚好和压缩相反，也就是通过最高位来判断是否结束解压缩，然后通过左移以及累加来不断地计算原有的值。</p>

<pre><code>DWORD CSphReader::UnzipInt ()			{ SPH_VARINT_DECODE ( DWORD, GetByte() ); }

#define SPH_VARINT_DECODE(_type,_getexpr) \
	register DWORD b = _getexpr; \
	register _type res = 0; \
	while ( b &amp; 0x80 ) \
	{ \
		res = ( res&lt;&lt;7 ) + ( b &amp; 0x7f ); \
		b = _getexpr; \
	} \
	res = ( res&lt;&lt;7 ) + b; \
	return res;
</code></pre>

<h2>索引文件介绍</h2>

<p>在介绍索引文件之前，我们先介绍几个概念：</p>

<ul>
  <li>document
    <ul>
      <li>每一条数据也就是一个document。</li>
    </ul>
  </li>
  <li>word
    <ul>
      <li>这里word表示一个单词，也就是Sphinx分词器处理完一条document之后，所得到的分词。</li>
    </ul>
  </li>
  <li>hits
    <ul>
      <li>也就是一个word在一条document中的频率。</li>
    </ul>
  </li>
  <li>attribute
    <ul>
      <li>一些扩展的字段，主要是为了做一些过滤（filter）。</li>
    </ul>
  </li>
</ul>

<p>然后来看索引文件的简单介绍.</p>

<ul>
  <li>然后我们来看索引的种类以及格式，在sphinx中，每一个索引都包含了下面几个文件：
    <ul>
      <li>sph文件 保存了索引的头文件，主要是一些索引元信息
        <ul>
          <li>实现在WriteHeader/LoadHeader中。</li>
        </ul>
      </li>
      <li>spi文件 保存了wordlist,也就是索引文件中最核心的一个文件。
        <ul>
          <li>也就是通过spi文件可以迅速的从一个keywords(word)映射到一堆document list。下面就是spi文件的格式(dict=keywords)：</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<pre><code>byte dummy = 0x01
keyword[] keyword_blocks
keyword is:
	byte keyword_editcode
	byte[] keyword_delta
	if keyword_editcode == 0:
		assert keyword_delta = { 0 }
		return block_end
	zint doclist_offset
	zint num_docs
	zint num_hits
	if num_docs &gt;= DOCLIST_HINT_THRESH:
		byte doclist_sizehint
	if ver &gt;= 31 and num_docs &gt; SKIPLIST_BLOCK:
		zint skiplist_pos
		zint skiplist_len

if min_infix_len &gt; 0:
	tag "infix-entries"
	infix_entry[] infix_hash_entries

checkpoint[] checkpoints
checkpoint is:
	dword keyword_len
	byte[] keyword [ keyword_len ]
	qword dict_offset

if min_infix_len &gt; 0:
	tag "infix-blocks"
	infix_block[] infix_hash_blocks

tag "dict-header"
zint num_checkpoints
zint checkpoints_offset
zint infix_codepoint_bytes
zint infix_blocks_offset
</code></pre>

<ul>
  <li>文件生成是在cidxHit中。</li>
  <li>spa文件 保存了attribute</li>
  <li>sps文件 单独保存string类型的attribute值</li>
  <li>spd文件 保存了document list
    <ul>
      <li>所有的document id都保存在这个这个文件中，也就是通过spi文件得到document list的信息后，可以迅速在spd文件中定位document list。</li>
    </ul>
  </li>
  <li>spe文件 保存了skip list</li>
  <li>spk文件 保存了 kill list</li>
  <li>spm文件 保存了MVA 值</li>
  <li>spp文件 保存了hit list。
    <ul>
      <li>保存了一个word在document中的所有出现的位置。也就是给定一个document 和一个keywords，这个文件将会返回所有的匹配位置(在当前的document中).</li>
    </ul>
  </li>
</ul>

<p>其中spp/spi/spd/spa/spe文件的生成都在RtIndex_t::SaveDiskDataImpl中实现。</p>

<p>在下一篇文章，我们会详细的介绍每个索引文件的生成。</p>

<h2>参考文档</h2>

<p>http://sphinxsearch.com/docs/current.html</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
