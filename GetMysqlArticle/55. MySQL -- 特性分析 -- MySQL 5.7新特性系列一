<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 特性分析 · MySQL 5.7新特性系列一</title>
  <meta name="description" content="1. 背景MySQL 5.7在2015-10-21发布了GA版本，即5.7.9，目前小版本已经到了5.7.12。5.7新增了许多新的feature和优化，接下来一个系列，我们就一起来尝尝鲜。首先这次主要是预览feature的变化以及兼容性问题。后面的系列，会针对重要的feature展开来学习。">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/05/02/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/05">
    <h1>数据库内核月报 － 2016 / 05</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2016/05/01/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/05/03/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/01/" target="_blank">
                
                MySQL · 引擎特性 · 基于InnoDB的物理复制实现
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/05/02/" target="_blank">
                
                MySQL · 特性分析 · MySQL 5.7新特性系列一
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/03/" target="_blank">
                
                PostgreSQL · 特性分析 · 逻辑结构和权限体系
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/04/" target="_blank">
                
                MySQL · 特性分析 · innodb buffer pool相关特性
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/05/" target="_blank">
                
                PG&GP · 特性分析 · 外部数据导入接口实现分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/06/" target="_blank">
                
                SQLServer · 最佳实践 · 透明数据加密在SQLServer的应用
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/07/" target="_blank">
                
                MySQL · TokuDB · 日志子系统和崩溃恢复过程
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/08/" target="_blank">
                
                MongoDB · 特性分析 · Sharded cluster架构原理
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/09/" target="_blank">
                
                PostgreSQL · 特性分析 · 统计信息计算方法
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/05/10/" target="_blank">
                
                MySQL · 捉虫动态 · left-join多表导致crash
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 特性分析 · MySQL 5.7新特性系列一
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>1. 背景</h2>
<p>MySQL 5.7在2015-10-21发布了GA版本，即5.7.9，目前小版本已经到了5.7.12。5.7新增了许多新的feature和优化，接下来一个系列，我们就一起来尝尝鲜。首先这次主要是预览feature的变化以及兼容性问题。后面的系列，会针对重要的feature展开来学习。</p>

<h2>2 安全相关的特性</h2>

<h3>2.1 认证插件</h3>
<p>mysql.user表中的plugin更改成not null，5.7开始不再支持mysql_old_password的认证插件，推荐全部使用mysql_native_password。从低版本升级到5.7的时候，需要处理两个兼容性问题。</p>

<p><strong>[兼容性]</strong><br />
需要先迁移mysql_old_password的用户，然后进行user表结构的升级：</p>

<p><strong>1. 迁移mysql_old_password用户</strong><br />
MySQL 5.7.2之前的版本，是根据password的hash value来判断使用的认证插件类型，5.7.2以后的版本，plugin字段为not null，就直接根据plugin来判断了。新的密码从password字段中，保存到新的字段authentication_string中，password字段废弃处理。</p>

<p>如果user是隐式的mysql_native_password。直接使用sql进行变更：</p>

<pre><code>UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE plugin = '' AND (Password = '' OR LENGTH(Password) = 41);
FLUSH PRIVILEGES;
</code></pre>
<p>如果user是隐式的或者显示的mysql_old_password， 首先通过以下sql进行查询：</p>

<pre><code>SELECT User, Host, Password FROM mysql.user WHERE (plugin = '' AND LENGTH(Password) = 16) OR plugin = 'mysql_old_password';
</code></pre>
<p>如果存在记录，就表示还有使用mysql_old_password的user，使用以下sql进行用户的迁移：</p>

<pre><code>ALTER USER 'user1'@'localhost' IDENTIFIED WITH mysql_native_password BY 'DBA-chosen-password';
</code></pre>

<p><strong>2. user表结构升级</strong><br />
通过mysql_upgrade直接进行升级，步骤如下[5.6-&gt;5.7]：</p>

<ol>
  <li>stop MySQL 5.6实例</li>
  <li>替换5.7的mysqld二进制版本</li>
  <li>使用5.7启动实例</li>
  <li>run mysql_upgrade升级系统表</li>
  <li>重启MySQL 5.7实例</li>
</ol>

<h3>2.2  密码过期</h3>
<p>用户可以通过 <code>ALTER USER 'jeffrey'@'localhost' PASSWORD EXPIRE;</code>这样的语句来使用户的密码过期。<br />
并新增加 default_password_lifetime来表示用户密码自动过期时间，从5.7.10开始，其默认值从0变更到了360，也就是默认一年过期。<br />
可以通过以下两种方法禁止过期：</p>

<pre><code>1. SET GLOBAL default_password_lifetime = 0;
2. ALTER USER 'jeffrey'@'localhost' PASSWORD EXPIRE NEVER;
</code></pre>

<p><strong>[兼容性]</strong><br />
只需要通过mysql_upgrade升级mysql.user系统表就可以使用密码过期新功能。</p>

<h3>2.3  账号锁定</h3>
<p>用户可以通过以下语法进行账号锁定，阻止这个用户进行登录：</p>

<pre><code>ALTER USER 'jeffrey'@'localhost' ACCOUNT LOCK;
ALTER USER 'jeffrey'@'localhost' ACCOUNT UNLOCK;
</code></pre>
<p><strong>[兼容性]</strong><br />
只需要通过mysql_upgrade升级mysql.user系统表就可以使用密码过期新功能。</p>

<h3>2.4  SSL连接</h3>
<p>如果mysqld编译使用的openssl，在启动的时候，默认创建SSL， RSA certificate 和 key 文件。<br />
但不管是openssl还是yassl，如果没有设置ssl相关的参数，mysqld都会在data directory里查找ssl认证文件，来尽量打开ssl特性。</p>

<p><strong>[兼容性]</strong><br />
不存在兼容性的问题</p>

<h3>2.5 安装数据库</h3>
<p>5.7开始建议用户使用 <code>mysqld --initialize</code>来初始化数据库，放弃之前的mysql_install_db的方式，新的方式只创建了一个root@localhost的用户，随机密码保存在~/.mysql_secret文件中，并且账号是expired，第一次使用必须reset password，并且不再创建test db。</p>

<p><strong>[兼容性]</strong><br />
不存在兼容性的问题</p>

<h2>3 sql mode变更</h2>
<p>5.7 sql_mode的默认值变更为：</p>

<pre><code>mode_no_engine_substitution |
      mode_only_full_group_by |
      mode_strict_trans_tables |
      mode_no_zero_in_date |
      mode_no_zero_date |
      mode_error_for_division_by_zero |
      mode_no_auto_create_user
</code></pre>

<p>而在5.7之前，sql_mode的默认值都只有mode_no_engine_substitution。<br />
所以在5.7默认的情况下，比如grant不存在的用户的时候，会报一下错误：</p>

<pre><code>ERROR 1133 (42000): Can't find any matching row in the user table
</code></pre>
<p>必须先使用create user，然后再使用grant user。</p>

<p><strong>[兼容性]</strong><br />
默认sql mode发生变更会导致sql的行为不一致。</p>

<h2>4. online alter table</h2>
<p>支持online rename index操作， in_place并且不需要table copy。<br />
<strong>[兼容性]</strong><br />
不存在兼容性的问题</p>

<h2>5. InnoDB增强</h2>

<h3>5.1 varchar长度变更支持inplace</h3>
<p>变更varchar 类型字段的长度支持inplace方法，但有一个限制，即用于表示varchar字段长度的字节数不能发生变化，也就是支持比如varchar的长度在255以下变更或者255以上的范围进行变更，因为从小于255变更到大于255，其size的字节需要从1个增加到2个。</p>

<p>注意：减少varchar的长度，仍然需要table copy。</p>

<h3>5.2 优化InnoDB临时表</h3>
<p>因为InnoDB临时表的数据不再不受redo保护，而redo只保护临时表的元数据，所以大幅提升了临时表的性能。<br />
并且InnoDB临时表的元数据保存在一个新的系统表中即innodb_temp_table_info，<br />
临时表将建立一个统一的表空间，我们称之为临时表空间，其目录地址可以通过参数innodb_temp_data_file_path来设置。系统在启动的时候，都会新建这个表空间，重启会删除重建。</p>

<p>例如：</p>

<pre><code>mysql&gt; show global variables like '%temp_data_file_path%';
+----------------------------+-----------------------+
| Variable_name              | Value                 |
+----------------------------+-----------------------+
| innodb_temp_data_file_path | ibtmp1:12M:autoextend |
+----------------------------+-----------------------+
</code></pre>
<p>并且5.7存储引擎默认都变更成InnoDB了：</p>

<pre><code>mysql&gt; show global variables like '%storage_engine%';
+----------------------------------+--------+
| Variable_name                    | Value  |
+----------------------------------+--------+
| default_storage_engine           | InnoDB |
| default_tmp_storage_engine       | InnoDB |
| disabled_storage_engines         |        |
| internal_tmp_disk_storage_engine | InnoDB |
+----------------------------------+--------+
</code></pre>
<p><strong>注意：</strong>    在开启gtid的情况下，非auto commit或者显示begin的context下，create 或者drop 临时表，仍然和5.6一样：</p>

<pre><code>ERROR 1787 (HY000): Statement violates GTID consistency: CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE can only be executed outside transactional context.
</code></pre>
<p>另外， insert into t select * from t也会遇到错误，不能在一个sql语句中reference两次临时表。</p>

<p><strong>备注：</strong> 因为InnoDB临时表进行了比较大的变动，我们会专门进行一次详细的介绍。</p>

<h3>5.3 InnoDB原生支持DATA_GEOMETRY类型</h3>
<p>并且支持在spatial data types上建立index，加速查询。</p>

<h3>5.4 buffer pool dump</h3>
<p>buffer pool dump和load支持一个新的参数innodb_buffer_pool_dump_pct，即dump的比例，并且使用innodb_io_capacity 来控制load过程中的IO吞吐量。</p>

<h3>5.5 多线程flush dirty</h3>
<p>从5.7.4开始，innodb_page_cleaners参数可以设置，支持多线程flush dirty page，加快脏块的刷新。</p>

<h3>5.6 NVM file system</h3>
<p>MySQL 一直使用double write buffer来解决一个page写入的partial write问题，但在linux系统上的Fusion-io Non-Volatile Memory (NVM) file system支持原子的写入。<br />
这样就可以省略掉double write buffer的使用， 5.7.4以后，如果Fusion-io devices支持atomic write，那么MySQL自动把dirty block直接写入到数据文件了。这样减少了一次内存copy和IO操作。</p>

<h3>5.7 InnoDB分区表</h3>
<p>MySQL 5.7之前的版本，InnoDB并不支持分区表，分区表的支持是在ha_partition引擎上支持的，从5.7开始，InnoDB支持原生的分区表，并且可以使用传输表空间。</p>

<p><strong>[兼容性]</strong><br />
mysql_upgrade会扫描ha_partition引擎支持的InnoDB表，并升级成InnoDB分区表，5.7.9之后，可以通过命令ALTER TABLE … UPGRADE PARTITIONING.进行升级。如果之前的版本大量使用了分区表，要注意使用mysql_upgrade会消耗非常长的时间来升级分区表。</p>

<h3>5.8 动态调整buffer pool size</h3>
<p>MySQL 5.7.5之后，可以online动态调整buffer pool size，通过设置动态的参数innodb_buffer_pool_size来调整，并且根据Innodb_buffer_pool_resize_status状态来查看resize的进度，因为resize的过程是以chunk为大小，把pages从一个内存区域copy到另一片内存的。</p>

<h3>5.9 加快recovery</h3>
<p>MySQL 5.7.5之前，在recovery的过程中，需要扫描所有的ibd文件，获取元信息， 5.7.5之后，新加了一种redo log类型，即MLOG_FILE_NAME， 记录从上一次checkpoint以来，发生过变更的文件，这样在recovery的过程中，只需要打开这些文件就可以了。<br />
<strong>[兼容性]</strong><br />
因为增加了新的log record type，需要安全的关闭5.7之前的实例，清理掉redo。</p>

<h3>5.10 表空间管理</h3>
<p>支持创建表空间，例如</p>

<pre><code>CREATE TABLESPACE `tablespace_name`
ADD DATAFILE 'file_name.ibd'
[FILE_BLOCK_SIZE = n]
</code></pre>
<p>并可以在创建表的时候，指定属于哪个表空间，</p>

<p><strong>[兼容性]</strong><br />
因为可以任意指定空间目录，要注意升级过程中，不要漏掉目录。</p>

<h3>5.11 InnoDB Tablespace Encryption</h3>
<p>支持InnoDB数据文件加密，其依赖keyring plugin来进行秘钥的管理，后面我们单独来介绍InnoDB加密的方法，并且RDS也实现了一种InnoDB数据文件透明加密方法，并通过KMS系统来管理秘钥。例如：</p>

<pre><code>create table t(id int) encryption='y';
</code></pre>

<p>未完待续</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
