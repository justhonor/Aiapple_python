<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 特性分析 · innodb 锁分裂继承与迁移</title>
  <meta name="description" content="innodb行锁简介  行锁类型">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/06/01/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/06">
    <h1>数据库内核月报 － 2016 / 06</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/06/02/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/06/01/" target="_blank">
                
                MySQL · 特性分析 · innodb 锁分裂继承与迁移
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/02/" target="_blank">
                
                MySQL · 特性分析 ·MySQL 5.7新特性系列二
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/03/" target="_blank">
                
                PgSQL · 实战经验 · 如何预测Freeze IO风暴
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/04/" target="_blank">
                
                GPDB · 特性分析· Filespace和Tablespace
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/05/" target="_blank">
                
                MariaDB · 新特性 · 窗口函数
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/06/" target="_blank">
                
                MySQL · TokuDB  · checkpoint过程
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/07/" target="_blank">
                
                MySQL · 特性分析 · 内部临时表
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/08/" target="_blank">
                
                MySQL · 最佳实践 · 空间优化
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/09/" target="_blank">
                
                SQLServer · 最佳实践 · 数据库实现大容量插入的几种方式
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/06/10/" target="_blank">
                
                MySQL · 引擎特性 · InnoDB COUNT(*) 优化(?)
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 特性分析 · innodb 锁分裂继承与迁移
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>innodb行锁简介</h2>
<ol>
  <li>行锁类型</li>
</ol>

<pre><code>    LOCK_S：共享锁
    LOCK_X: 排他锁
</code></pre>
<ol>
  <li>GAP类型</li>
</ol>

<pre><code>    LOCK_GAP：只锁间隙
    LOCK_REC_NO_GAP:只锁记录
    LOCK_ORDINARY: 锁记录和记录之前的间隙
    LOCK_INSERT_INTENTION: 插入意向锁，用于insert时检查锁冲突
</code></pre>
<p>每个行锁由锁类型和GAP类型组成<br />
例如：<br />
LOCK_X|LOCK_ORDINARY 表示对记录和记录之前的间隙加排他锁<br />
LOCK_S|LOCK_GAP 表示只对记录前的间隙加共享锁</p>

<p>锁的兼容性：<br />
  值得注意的是，持有GAP的锁（LOCK_GAP和LOCK_ORDINARY)与其他非LOCK_INSERT_INTENTION的锁都是兼容的，也就是说，GAP锁就是为了防止插入的。</p>

<p>详细可以参考之前的<a href="http://mysql.taobao.org/monthly/2016/01/01/">月报</a></p>

<h2>innodb 锁分裂、继承与迁移</h2>
<p>这里的锁分裂和合并，只是针对innodb行锁而言的，而且一般只作用于GAP类型的锁。</p>

<ul>
  <li>
    <p>锁分裂</p>

    <p>插入的记录的间隙存在GAP锁，此时此GAP需分裂为两个GAP</p>
  </li>
</ul>

<pre><code>  lock_rec_inherit_to_gap_if_gap_lock:

  for (lock = lock_rec_get_first(block, heap_no);
        lock != NULL;
        lock = lock_rec_get_next(heap_no, lock)) {

           if (!lock_rec_get_insert_intention(lock)
               &amp;&amp; (heap_no == PAGE_HEAP_NO_SUPREMUM
                   || !lock_rec_get_rec_not_gap(lock))) {

                   lock_rec_add_to_queue(
                           LOCK_REC | LOCK_GAP | lock_get_mode(lock),
                           block, heir_heap_no, lock-&gt;index,
                           lock-&gt;trx, FALSE);
           }
   }

</code></pre>
<ul>
  <li>
    <p>锁继承</p>

    <p>删除的记录前存在GAP锁，此GAP锁会继承到要删除记录的下一条记录上</p>
  </li>
</ul>

<pre><code>  lock_rec_inherit_to_gap:

  for (lock = lock_rec_get_first(block, heap_no);
     lock != NULL;
     lock = lock_rec_get_next(heap_no, lock)) {

        if (!lock_rec_get_insert_intention(lock)
            &amp;&amp; !((srv_locks_unsafe_for_binlog
                  || lock-&gt;trx-&gt;isolation_level
                  &lt;= TRX_ISO_READ_COMMITTED)
                 &amp;&amp; lock_get_mode(lock) ==
                 (lock-&gt;trx-&gt;duplicates ? LOCK_S : LOCK_X))) {

                lock_rec_add_to_queue(
                        LOCK_REC | LOCK_GAP | lock_get_mode(lock),
                        heir_block, heir_heap_no, lock-&gt;index,
                        lock-&gt;trx, FALSE);
        }
}
</code></pre>
<ul>
  <li>
    <p>锁迁移</p>

    <p>B数结构变化，锁信息也会随之迁移. 锁迁移过程中也涉及锁继承。</p>
  </li>
</ul>

<h2>锁分裂示例</h2>

<ul>
  <li>锁分裂例子</li>
</ul>

<pre><code>set global tx_isolation='repeatable-read';

create table t1(c1 int primary key, c2 int unique) engine=innodb;
insert into t1 values(1,1);

begin;
# supremum 记录上加 LOCK_X|LOCK_GAP 锁住(1~)
select * from t1 where c2=2 for update;
# 发现插入(3,3)的间隙存在GAP锁，因此给（3,3）加LOCK_X | LOCK_GAP锁。这样依然锁住了（1~）
insert into t1 values(3,3);

</code></pre>
<p>这里如果插入（3,3）没有给（3,3）加LOCK_X | LOCK_GAP，那么其他连接插入（2，2）就可以成功</p>

<h2>锁继承示例</h2>
<ul>
  <li>
    <p>隔离级别repeatable-read</p>

    <p><img src="/monthly/pic/20160605/160601.jpg" alt="RR" /></p>

    <p>验证：session 1执行insert into t1 values(1,1)发生了锁等待，说明(2,2)上有gap锁</p>
  </li>
</ul>

<pre><code>mysql&gt; select * from information_schema.innodb_locks;
+------------------------+-------------+-----------+-----------+-----------------+------------+------------+-----------+----------+-----------+
| lock_id                | lock_trx_id | lock_mode | lock_type | lock_table      | lock_index | lock_space | lock_page | lock_rec | lock_data |
+------------------------+-------------+-----------+-----------+-----------------+------------+------------+-----------+----------+-----------+
| 16582717714:888654:4:3 | 16582717714 | X,GAP     | RECORD    | `cleaneye`.`t1` | c2         |     888654 |         4 |        3 | 2         |
| 16582692183:888654:4:3 | 16582692183 | X,GAP     | RECORD    | `cleaneye`.`t1` | c2         |     888654 |         4 |        3 | 2         |
+------------------------+-------------+-----------+-----------+-----------------+------------+------------+-----------+----------+-----------+
2 rows in set (0.01 sec)
其中session 2 在(2,2) 加了LOCK_X|LOCK_GAP
   session 1 在(2,2) 加了LOCK_X|LOCK_GAP|LOCK_INSERT_INTENTION. LOCK_INSERT_INTENTION与LOCK_GAP冲突发生等待
</code></pre>

<ul>
  <li>隔离级别read-committed</li>
</ul>

<p><img src="/monthly/pic/20160605/160602.jpg" alt="RC" /></p>

<p>验证: session 1执行insert into t1 values(1)发生了锁等待，说明(2)上有gap锁</p>

<pre><code>mysql&gt; select * from information_schema.innodb_locks;
+------------------------+-----------------+-----------+-----------+-------------+------------+------------+-----------+----------+-----------+
| lock_id                | lock_trx_id     | lock_mode | lock_type | lock_table  | lock_index | lock_space | lock_page | lock_rec | lock_data |
+------------------------+-----------------+-----------+-----------+-------------+------------+------------+-----------+----------+-----------+
| 1705:32:3:3            | 1705            | X,GAP     | RECORD    | `test`.`t1` | PRIMARY    |         32 |         3 |        3 | 2         |
| 421590768578232:32:3:3 | 421590768578232 | S,GAP     | RECORD    | `test`.`t1` | PRIMARY    |         32 |         3 |        3 | 2         |
+------------------------+-----------------+-----------+-----------+-------------+------------+------------+-----------+----------+-----------+
X.GAP insert 加锁LOCK_X | LOCK_GAP | LOCK_INSERT_INTENTION
S.GAP 加锁LOCK_S|LOCK_GAP,记录(2)从删除的记录(1)继承过来的GAP锁
</code></pre>
<p>而实际在读提交隔离级别上，insert into t1 values(1)应该可以插入成功，不需要等待的，这个锁是否继承值得商榷。</p>

<p>来看一个插入成功的例子</p>

<p><img src="/monthly/pic/20160605/160603.jpg" alt="RC" /></p>

<ul>
  <li>
    <p>隔离级别serializable</p>

    <p><img src="/monthly/pic/20160605/160604.jpg" alt="SERIALIZABLE" /></p>

    <p>验证方法同read-committed。</p>
  </li>
</ul>

<h2>B树结构变化与锁迁移</h2>

<p>B树节点发生分裂，合并，删除都会引发锁的变化。锁迁移的原则是，B数结构变化前后，锁住的范围保证不变。<br />
  我们通过例子来说明</p>

<ul>
  <li>
    <p>节点分裂</p>

    <p>假设原节点A(infimum,1,3,supremum) 向右分裂为B(infimum,1,supremum), C(infimum,3,supremum)两个节点<br />
&gt; infimum为节点中虚拟的最小记录，supremum为节点中虚拟的最大记录</p>

    <p>假设原节点A上锁为3上LOCK_S|LOCK_ORIDNARY，supremum为LOCK_S|LOCK_GAP,实际锁住了(1~)<br />
锁迁移过程大致为：</p>

    <ol>
      <li>将3上的gap锁迁移到C节点3上</li>
      <li>将A上supremum迁移继承到C的supremum上</li>
      <li>将C上最小记录3的锁迁移继承到B的supremum上</li>
    </ol>

    <p>迁移完成后锁的情况如下(lock_update_split_right)<br />
B节点：suprmum LOCK_S|LOCK_GAP<br />
C节点：3 LOCK_S|LOCK_ORINARY, suprmum LOCK_S|GAP</p>

    <p>迁移后仍然锁住了范围(1~)</p>

    <p>节点向左分裂情形类似</p>
  </li>
  <li>
    <p>节点合并</p>

    <p>以上述节点分裂的逆操作来讲述合并过程<br />
B(infimum,1,supremum), C(infimum,3,supremum)两个节点，向左合并为A节点(infimum,1,3,supremum)<br />
其中B，C节点锁情况如下<br />
B节点：suprmum LOCK_S|LOCK_GAP<br />
C节点：3 LOCK_S|LOCK_ORINARY, suprmum LOCK_S|GAP</p>

    <p>迁移流程如下(lock_update_merge_left)：</p>

    <p>1)将C节点锁记录3迁移到B节点</p>

    <p>2)将B节点supremum迁移继承到A的supremum上</p>

    <p>迁移后仍然锁住了范围(1~)</p>

    <p>节点向右合并情形类似</p>
  </li>
  <li>
    <p>节点删除</p>

    <p>如果删除节点存在左节点，则将删除节点符合条件的锁，迁移继承到左节点supremum上<br />
否则将删除节点符合条件的锁，迁移继承到右节点最小用户记录上<br />
参考lock_update_discard</p>
  </li>
</ul>

<h2>锁继承相关的BUG</h2>

<p><a href="https://bugs.mysql.com/bug.php?id=73170">bug#73170</a> 二级唯一索引失效。这个bug触发条件是删除的记录没有被purge, 锁还没有被继承的。如果锁继承了就不会出现问题。</p>

<p><a href="https://bugs.mysql.com/bug.php?id=76927">bug#76927</a> 同样是二级唯一索引失效。这个bug是锁继承机制出了问题。</p>

<p>以上两个bug详情参考<a href="http://mysql.taobao.org/monthly/2015/06/02/">这里</a></p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
