<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 特性分析 · 执行计划缓存设计与实现</title>
  <meta name="description" content="Plan Cache背景知识">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/09/04/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/09">
    <h1>数据库内核月报 － 2016 / 09</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2016/09/03/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/09/05/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/01/" target="_blank">
                
                MySQL · 社区贡献 · AliSQL那些事儿
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/02/" target="_blank">
                
                PetaData · 架构体系 · PetaData第二代低成本存储体系
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/03/" target="_blank">
                
                MySQL · 社区动态 · MariaDB 10.2 前瞻
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/09/04/" target="_blank">
                
                MySQL · 特性分析 · 执行计划缓存设计与实现
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/05/" target="_blank">
                
                PgSQL · 最佳实践 · pg_rman源码浅析与使用
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/06/" target="_blank">
                
                MySQL · 捉虫状态 · bug分析两例
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/07/" target="_blank">
                
                PgSQL · 源码分析 · PG优化器浅析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/08/" target="_blank">
                
                MongoDB · 特性分析· Sharding原理与应用
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/09/" target="_blank">
                
                PgSQL · 源码分析 · PG中的无锁算法和原子操作应用一则
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/09/10/" target="_blank">
                
                SQLServer · 最佳实践 · TEMPDB的设计
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 特性分析 · 执行计划缓存设计与实现
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>Plan Cache背景知识</h2>

<p>一条SQL语句输入到MySQL服务器后，一般要经历：词法语法解析(parse)，优化（optimize），生成执行计划(plan)和执行(execute)的过程。词法语法分析，优化以及生成执行计划，这三个阶段的主要输出是SQL语句的执行计划(plan)，当SQL语句存在多种执行计划的时候，优化器会从这许多的执行计划中挑选出一个它认为最优的（通常是占用系统资源最少的，包括CPU以及IO等）作为最终的执行计划供执行器执行。生成执行计划的过程会消耗较多的时间，特别是存在许多可选的执行计划时。如果在一条SQL语句执行的过程中将该语句对应的最终执行计划进行缓存，当相似的语句再次被输入服务器时，就可以直接使用已缓存的执行计划，从而跳过SQL语句生成执行计划的整个过程，进而可以提高语句的执行速度。</p>

<p>ApsaraDB MySQL 执行计划缓存目前只支持SELECT操作的语句（以后会支持其他DML操作）。在相似的SQL语句大量重复出现（这里“相似”的SQL语句指的是SQL语句中除了常量有所不同外，其他都必须相同）时，使用执行计划缓存可以极大的节省语句的执行时间。同时，使用执行计划缓存会带来额外的内存开销，因此建议在内存充裕的情况下使用该功能。</p>

<h2>Plan Cache的架构</h2>

<p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/5f30d7281f5eb3c4257499b2c914e10b" alt="Plan Cache的架构图" /></p>

<p><strong>说明</strong>：<br />
图1表示的是ApsaraDB MySQL一条SQL语句输入MySQL服务器的执行过程。<br />
图2表示的是当前ApsaraDB MySQL Plan Cache的架构图。</p>

<h2>Plan Cache中的数据结构</h2>

<p>如图2所示，Plan Cache包含了如下几种数据结构：<br />
1. <em>Execute_plan_cache_manager</em>： 对整个Plan Cache进行管理，负责提供接口供Server其他模块调用。<br />
2. <em>Execute_plan_cache_partition</em>（图示中的PartitionX）： 为了减少“锁“对整个Plan Cache的增删改操作引发性能方面的影响，我们将Plan Cache 划分为多个partition，对于每条符合Plan Cache条件的SQL语句只对其对应的partition进行上“锁”。<br />
3. <em>Execute_plan_cache</em>（图示中的PlanX）：实际用来存储plan恢复所需的所有信息。</p>

<h2>Plan Cache相关的系统变量</h2>

<ul>
  <li>rds_enable_exec_plan_cache</li>
</ul>

<table>
  <tbody>
    <tr>
      <td>范围</td>
      <td>GLOBAL</td>
    </tr>
    <tr>
      <td>类型</td>
      <td>BOOL</td>
    </tr>
    <tr>
      <td>功能</td>
      <td>a) ON 打开Plan Cache功能。b) OFF 关闭Plan Cache功能，清空Plan Cache(默认)。</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>rds_max_digest_length</li>
</ul>

<table>
  <tbody>
    <tr>
      <td>范围</td>
      <td>GLOBAL</td>
    </tr>
    <tr>
      <td>类型</td>
      <td>LONG</td>
    </tr>
    <tr>
      <td>功能</td>
      <td>a) 设置SQL语句中常量替换后的的长度，设置范围是（128 ~ 1M）。b) 默认值是4K。<br /> c) 如果SQL语句长度大于该值，query的plan不会被缓存。</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>rds_exec_plan_hash_parititions</li>
</ul>

<table>
  <tbody>
    <tr>
      <td>范围</td>
      <td>GLOBAL READONLY</td>
    </tr>
    <tr>
      <td>类型</td>
      <td>ULONG</td>
    </tr>
    <tr>
      <td>功能</td>
      <td>Plan Cache manager里面可以有多少个partition。默认值是CACHE_MANAGER_PARTITIONS（8）</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>rds_max_exec_plan_caches</li>
</ul>

<table>
  <tbody>
    <tr>
      <td>范围</td>
      <td>GLOBAL READONLY</td>
    </tr>
    <tr>
      <td>类型</td>
      <td>ULONG</td>
    </tr>
    <tr>
      <td>功能</td>
      <td>a) Plan Cache里面可以定义多少条缓存的plan记录数。b) 防止Plan Cache skew发生性能问题。<br /> c) 如果太大失效性能会有影响。d) 默认值是MAX_PLAN_CACHES(1024)</td>
    </tr>
    <tr>
      <td>备注</td>
      <td>如果Plan Cache中分配到某个Partition中的记录数超过了rds_max_exec_plan_caches的平均数，<br />即rds_max_exec_plan_caches / rds_exec_plan_hash_parititions，<br />Plan Cache将利用LRU对存在的执行计划记录进行淘汰。</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>rds_max_plan_cache_mem_size</li>
</ul>

<table>
  <tbody>
    <tr>
      <td>范围</td>
      <td>GLOBAL</td>
    </tr>
    <tr>
      <td>类型</td>
      <td>ULONG</td>
    </tr>
    <tr>
      <td>功能</td>
      <td>a) 设置Plan Cache的大小，范围是（0 ~ +∞）。默认值1M。</td>
    </tr>
    <tr>
      <td>备注</td>
      <td>如果Plan Cache中分配到某个Partition中的记录所使用的内存超过了rds_max_plan_cache_mem_size的平均数，<br />即rds_max_plan_cache_mem_size / rds_exec_plan_hash_parititions, <br />Plan Cache将利用LRU对存在的执行计划记录进行淘汰。</td>
    </tr>
  </tbody>
</table>

<h2>Plan Cache目前支持的场景</h2>

<ol>
  <li>支持所有存储引擎。</li>
  <li>不支持UPDATE，INSERT，DELETE以及DDL。</li>
  <li>不支持UNION，INTERSECT， MINUS。</li>
  <li>不支持Explain。</li>
  <li>Const plan不支持。</li>
  <li>系统表查询不支持。</li>
  <li>支持所有SELECT 语句，除下面列出的特殊情况
    <ul>
      <li>多表连接不支持。</li>
      <li>包含SUBQUERY或者VIEW的不支持。</li>
      <li>不支持SP或者UDF。</li>
    </ul>
  </li>
</ol>

<h2>Plan Cache中记录的失效</h2>

<h3>自动失效</h3>
<ol>
  <li>Plan Cache中对于依赖于某个表的所有执行计划记录，如果表结构发生了修改或者表被DROP掉，相关的记录都将被失效；</li>
  <li>如果关闭Plan Cache功能，即设置rds_enable_exec_plan_cache为off，所有的记录都将被失效；</li>
</ol>

<h3>主动失效</h3>
<ol>
  <li>可以使用ALTER TABLE table_name DROP cached plan语句将于该表相关的执行计划记录失效掉；</li>
</ol>

<h2>Plan Cache相关的HINT</h2>
<ol>
  <li><strong>no_plan_cache</strong>：使用该hint，可以使当前SQL语句忽略使用Plan Cache中缓存的执行计划，同时Plan Cache也不会缓存当前SQL语句的执行计划。</li>
  <li><strong>force_update_plan_cache</strong>：使用该hint，如果Plan Cache中存在当前SQL语句相关的执行计划记录，Plan Cache将强制更新该条SQL对应的执行计划缓冲记录。</li>
</ol>

<p>由于当前的Plan Cache没有考虑统计信息变化以及调优过程中使用的强制变更执行计划的选项，所以如果使用Plan Cache中缓冲的执行计划效率比较低，可以通过使用HINT来更新Plan Cache中的记录。</p>

<h2>Plan Cache 的监控</h2>

<ul>
  <li>直接查看执行计划缓存。</li>
</ul>

<pre><code>mysql&gt; use test;
Database changed
mysql&gt; create table tt(a int, b int);
Query OK, 0 rows affected (0.19 sec)

mysql&gt; insert into tt values(1,2),(3,4);
Query OK, 2 rows affected (0.03 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql&gt; select * from tt;
+------+------+
| a    | b    |
+------+------+
|    1 |    2 |
|    3 |    4 |
+------+------+
2 rows in set (0.00 sec)

mysql&gt; SELECT * FROM INFORMATION_SCHEMA.EXEC_CACHE_STATUS;
+------------+---------------------+------------+------+-------------+-----------+--------------------------+
| SQL_PRINT  | SQL_DIGEST          | TABLE_NAME | KEYS | USED_MEMORY | HIT_COUNT | EXTENDED                 |
+------------+---------------------+------------+------+-------------+-----------+--------------------------+
| 4095414401 | SELECT * FROM `tt`  | test.tt    |      |         144 |         0 | ALL, partition number: 1 |
+------------+---------------------+------------+------+-------------+-----------+--------------------------+
1 row in set (0.00 sec)
</code></pre>

<ul>
  <li>使用Optimizer_trace来查看当前的SQL语句是否使用了Plan Cache。</li>
</ul>

<pre><code>mysql&gt; SET optimizer_trace="enabled=on";
Query OK, 0 rows affected (0.00 sec)

mysql&gt; select * from tt;
+------+------+
| a    | b    |
+------+------+
|    1 |    2 |
|    3 |    4 |
+------+------+
2 rows in set (0.00 sec)

mysql&gt; SELECT * FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
...
{
            "plan_cache": [
              {
                "table": "`tt`",
                "rows": 0,
                "cost": 0,
                "use_cached_plan": "yes",
                "scan type": "ALL"
              }
            ]
          },
...
</code></pre>

<ul>
  <li>查看当前的Plan Cache的执行状态。</li>
</ul>

<pre><code>mysql&gt; show status like '%Execute_plan%';
+--------------------------------------+-------+
| Variable_name                        | Value |
+--------------------------------------+-------+
| Execute_plan_cache_hits              | 0     |
| Execute_plan_cache_misses            | 0     |
| Execute_plan_cache_records           | 0     |
| Execute_plan_cache_total_hits        | 1     |
| Execute_plan_cache_total_used_memory | 176   |
| Execute_plan_cache_used_memory       | 0     |
| Execute_plan_total_cache_records     | 1     |
+--------------------------------------+-------+
7 rows in set (0.01 sec)
</code></pre>

<p><strong>说明</strong>：</p>

<table>
  <tbody>
    <tr>
      <td>Execute_plan_cache_hits</td>
      <td>显示当前session，执行的SQL语句命中Plan Cache的条数。</td>
    </tr>
    <tr>
      <td>Execute_plan_cache_misses</td>
      <td>显示当前session，执行的SQL语句未命中Plan Cache的条数。</td>
    </tr>
    <tr>
      <td>Execute_plan_cache_records</td>
      <td>当前Plan Cache中存在的与当前session相关的执行计划缓存记录数。</td>
    </tr>
    <tr>
      <td>Execute_plan_cache_total_hits</td>
      <td>显示所有session，执行的SQL语句命中Plan Cache的条数。</td>
    </tr>
    <tr>
      <td>Execute_plan_cache_total_used_memory</td>
      <td>整个Plan Cache所使用的内存大小。</td>
    </tr>
    <tr>
      <td>Execute_plan_cache_used_memory</td>
      <td>当前session相关的Plan Cache所使用的内存大小。</td>
    </tr>
    <tr>
      <td>Execute_plan_total_cache_records</td>
      <td>整个Plan Cache缓存的执行计划记录数。</td>
    </tr>
  </tbody>
</table>

<h2>Plan Cache的测试性能</h2>

<p><strong>测试环境</strong>：<br />
HW：64bits，32 cores- 64 processors，2.5G HZ；内存：500G； SSD。</p>

<p>OS: Centos</p>

<p>测试工具：修改后的Sysbench</p>

<p>测试workload：2，4，8，16…1024个sessions。</p>

<p>测试包括RO，RW。</p>

<p>数据集： 100,000行记录。</p>

<p><strong>测试效果</strong>：</p>

<p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/f59d91b9f1607b70285bc07c8f20f396" alt="Plan Cache RO性能图" /><br />
<img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/8acb9e3408a6a08d2d9ae763776d22ad" alt="Plan Cache RW性能图" /></p>

<p>图3是打开和关闭Plan Cache，对于read only sysbench的测试性能图，可以看到在Plan Cache大小不同对于性能的提升也有差异。如果Plan Cache分配内存太小，会频繁进行LRU淘汰，导致性能受到影响。但如果Plan Cache分配的内存足够大，我们可以看到理想状态下，Plan Cache可以提升5X左右。</p>

<p>图4是打开和关闭Plan Cache，对于read/write sysbench的测试性能图，可以看到打开Plan Cache对于write方面的性能几乎没有影响。</p>

<h2>Plan Cache 的并发控制</h2>

<p>为了能够尽量的减少加锁对并发查询性能的影响，我们的设计尽可能的减少对锁的依赖。因此我们对于plan_cache_manager这样的全局管理对象采取了lock free，并未引入任何RW Lock来控制并发。而是对plan_cache_manager下面的每一个partition使用了RW Lock。 通过将查询分散到多个partition中有效的减少了读写Plan Cache的加锁时间。对于写入某个partition中的执行计划我们首先需要对partition加W-Lock；而对于从Plan Cache中的某个partition获取执行计划记录，我们会使用R-lock来控制并发。</p>

<h2>总结</h2>

<p>如果当前用户频繁使用相似的query进行查询，Plan Cache可以有效的减少query的优化时间，进而提升query的执行性能。目前Plan Cache是我们开发的第一个版本，只是针对我们线上的场景进行优化，很多场景还不支持。希望在未来的时间里可以完善Plan Cache，提供更多的场景支持。</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
