<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 答疑解惑 · 物理备份死锁分析</title>
  <meta name="description" content="背景">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/01/05/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/01">
    <h1>数据库内核月报 － 2016 / 01</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2016/01/04/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/01/06/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/01/" target="_blank">
                
                MySQL · 引擎特性 · InnoDB 事务锁系统简介
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/02/" target="_blank">
                
                GPDB &nbsp; · 特性分析· GreenPlum Primary/Mirror 同步机制
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/03/" target="_blank">
                
                MySQL · 专家投稿 · MySQL5.7 的 JSON 实现
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/04/" target="_blank">
                
                MySQL · 特性分析 · 优化器 MRR & BKA
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/01/05/" target="_blank">
                
                MySQL · 答疑解惑 · 物理备份死锁分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/06/" target="_blank">
                
                MySQL · TokuDB · Cachetable 的工作线程和线程池
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/07/" target="_blank">
                
                MySQL · 特性分析 · drop table的优化
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/08/" target="_blank">
                
                MySQL · 答疑解惑 · GTID不一致分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/09/" target="_blank">
                
                PgSQL · 特性分析 · Plan Hint
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/10/" target="_blank">
                
                MariaDB · 社区动态 · MariaDB on Power8 (下)
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 答疑解惑 · 物理备份死锁分析
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>背景</h2>

<p>本文对 5.6 主备场景下，在备库做物理备份遇到死锁的case进行分析，希望对大家有所帮助。</p>

<p>这里用的的物理备份工具是 Percona-XtraBackup(PXB)，有的同学可能不清楚其备份流程，所以这里先简单说下，PXB的备份步骤是这样的：</p>

<ol>
  <li>拷贝 InnoDB redo log，这是一个单独的线程在拷，直到备份结束；</li>
  <li>拷贝所有InnoDB ibd文件；</li>
  <li>加全局读锁，执行 FLUSH TABLES WITH READ LOCK(FTWRL);</li>
  <li>拷贝 frm、MYD、MYI 等文件；</li>
  <li>获取位点信息，执行 show slave status 和 show master status；</li>
  <li>解锁，UNLOCK TABLES;</li>
  <li>做一些收尾处理，备份结束。</li>
</ol>

<p>如果 MyISAM 表很多话，全局读锁的持有时间会比较长，所以一般都在备库做备份。</p>

<p>另外 FLUSH TABLE WITH READ LOCK 这条命令会获取2个MDL锁，全局读锁（<code>MDL_key::GLOBAL</code>）和全局COMMIT（<code>MDL_key::COMMIT</code>）锁，MDL锁详情可以参考之前的月报<a href="http://mysql.taobao.org/monthly/2015/11/04/" title="MDL 实现分析">MDL 实现分析</a>。</p>

<h2>死锁分析</h2>

<h3>CASE 1</h3>

<p>我们先看一下死锁时的现场是怎样的：</p>

<pre><code>mysql&gt; show processlist;
+----+-------------+-----------------+------+---------+------+----------------------------------------+-------------------+
| Id | User        | Host            | db   | Command | Time | State                                  | Info              |
+----+-------------+-----------------+------+---------+------+----------------------------------------+-------------------+
|  1 | root        | 127.0.0.1:53309 | NULL | Query   |  278 | init                                   | show slave status |
|  2 | system user |                 | NULL | Connect |  381 | Queueing master event to the relay log | NULL              |
|  3 | system user |                 | NULL | Connect |  311 | Waiting for commit lock                | NULL              |
|  4 | root        | 127.0.0.1:53312 | NULL | Query   |    0 | init                                   | show processlist  |
+----+-------------+-----------------+------+---------+------+----------------------------------------+-------------------+
</code></pre>

<p>可以看到 show slave status 被堵了很久，另外 SQL 线程在 Waiting for commit lock，说明在等待 COMMIT 锁。</p>

<p>这时候如果我们再连接进去执行 show slave status 也会被堵，并且即使 Ctrl-C kill 掉线程，线程依然还在。</p>

<pre><code>mysql&gt; show processlist;
+----+-------------+-----------------+------+---------+------+----------------------------------------+-------------------+
| Id | User        | Host            | db   | Command | Time | State                                  | Info              |
+----+-------------+-----------------+------+---------+------+----------------------------------------+-------------------+
|  1 | root        | 127.0.0.1:53309 | NULL | Query   |  753 | init                                   | show slave status |
|  2 | system user |                 | NULL | Connect |  856 | Queueing master event to the relay log | NULL              |
|  3 | system user |                 | NULL | Connect |  786 | Waiting for commit lock                | NULL              |
|  4 | root        | 127.0.0.1:53312 | NULL | Killed  |  188 | init                                   | show slave status |
|  5 | root        | 127.0.0.1:53314 | NULL | Query   |    0 | init                                   | show processlist  |
|  8 | root        | 127.0.0.1:53318 | NULL | Killed  |  125 | init                                   | show slave status |
| 11 | root        | 127.0.0.1:53321 | NULL | Killed  |  123 | init                                   | show slave status |
| 14 | root        | 127.0.0.1:53324 | NULL | Query   |  120 | init                                   | show slave status |
+----+-------------+-----------------+------+---------+------+----------------------------------------+-------------------+
</code></pre>

<p>pstack 看下相关线程的 backtrace，show slave status 线程的 backtrace 如下，非常明显是在等mutex，对应代码为 <code>mysql_mutex_lock(&amp;mi-&gt;rli-&gt;data_lock)</code>:</p>

<pre><code>#0  __lll_lock_wait
#1  _L_lock_974
#2  __GI___pthread_mutex_lock
#3  inline_mysql_mutex_lock
#4  show_slave_status
#5  mysql_execute_command
#6  mysql_parse
#7  dispatch_command
#8  do_command
#9  do_handle_one_connection
#10 handle_one_connection
...
</code></pre>

<p>SQL 线程的 backtrace 如下，在等 COMMIT 锁：</p>

<pre><code>#0  pthread_cond_timedwait
#1  inline_mysql_cond_timedwait
#2  MDL_wait::timed_wait
#3  MDL_context::acquire_lock
#4  ha_commit_trans
#5  trans_commit
#6  Xid_log_event::do_commit
#7  Xid_log_event::do_apply_event
#8  Log_event::apply_event
#9  apply_event_and_update_pos
#10 exec_relay_log_event
#11 handle_slave_sql
...
</code></pre>

<p>如果我们gdb进去，去调试SQL线程，在 <code>MDL_context::acquire_lock</code>中：</p>

<pre><code>(gdb) p (MDL_key::enum_mdl_namespace)lock-&gt;key-&gt;m_ptr[0]
$24 = MDL_key::COMMIT
(gdb) p ((THD*)lock-&gt;m_granted.m_list.m_first-&gt;m_ctx-&gt;m_owner)-&gt;thread_id
$25 = 1
</code></pre>

<p>可以看到 COMMIT 锁被线程 1 持有。</p>

<p>SQL线程在 <code>Xid_log_event::do_commit</code> 之前会持有 <code>rli_ptr-&gt;data_lock</code>。</p>

<p>所以现在就清楚了，是线程1（备份线程）和线程3（SQL线程）死锁了，还原下死锁过程：</p>

<ol>
  <li>备份线程执行 FTWRL，拿到 COMMIT 锁；</li>
  <li>SQL线程执行到Xid event，准备提交事务，请求 COMMIT 锁，被备份线程阻塞；</li>
  <li>备份线程为了获取 slave 执行位点，执行 show slave status，需要获取 <code>rli-&gt;data_lock</code>，被 SQL 线程阻塞。</li>
</ol>

<p>就这样2个线程互相持有等待，形成死锁。</p>

<p>我们知道，MDL 是有死锁检测的，为什么这里没有检测到呢？因为<code>rli-&gt;data_lock</code>是一个mutex，不属于MDL系统的，在这个死锁场景中，MDL锁系统只能检测到对 COMMIT 锁的请求，是不存在死锁的。</p>

<p>之后的 show slave status 都被堵，是因为在执行 show slave status 前，会请求一个mutex:</p>

<pre><code>mysql_mutex_lock(&amp;LOCK_active_mi);
res= show_slave_status(thd, active_mi);
mysql_mutex_unlock(&amp;LOCK_active_mi);
</code></pre>

<p>之前死锁的 show slave status 没有退出，后面的 show slave status 自然堵在这个 mutex 上，并且因为无法检测 <code>thd-&gt;killed</code>，所以一直无法退出。</p>

<p>死锁的原因是SQL线程在提交的时候，持有 <code>rli-&gt;data_lock</code> 锁，其实这个是不需要的，MySQL 官方在这个 <a href="http://gitlab.alibaba-inc.com/mysql-server/mysql-server/commit/f42e9f8fd2309e85f25ff0471eb5f7e397311b2a">patch</a> 中修复。</p>

<h3>CASE 2</h3>

<p>在上面的bug修复后，又出现了死锁，但死锁的情况却不一样，show processlist 结果如下：</p>

<pre><code>mysql&gt; show processlist;
+----+-------------+-----------------+------+---------+------+----------------------------------+-------------------+
| Id | User        | Host            | db   | Command | Time | State                            | Info              |
+----+-------------+-----------------+------+---------+------+----------------------------------+-------------------+
|  2 | system user |                 | NULL | Connect |  436 | Waiting for master to send event | NULL              |
|  3 | system user |                 | NULL | Connect |  157 | Waiting for commit lock          | NULL              |
|  6 | root        | 127.0.0.1:42787 | NULL | Query   |   86 | init                             | show slave status |
|  7 | root        | 127.0.0.1:42788 | NULL | Query   |   96 | Killing slave                    | stop slave        |
|  8 | root        | 127.0.0.1:42789 | NULL | Query   |    0 | init                             | show processlist  |
+----+-------------+-----------------+------+---------+------+----------------------------------+-------------------+
</code></pre>

<p>依然是 SQL 线程在等待commit锁，然后 show slave status 被堵住没有返回，不同的是多了一个 stop slave; 我们来看下 stop slave 的backtrace:</p>

<pre><code>#0  pthread_cond_timedwait
#1  inline_mysql_cond_timedwait
#2  terminate_slave_thread
#3  terminate_slave_threads
#4  stop_slave
#5  mysql_execute_command
#6  mysql_parse
#7  dispatch_command
#8  do_command
#9  do_handle_one_connection
#10 handle_one_connection
...
</code></pre>

<p>对应代码，可以发现 stop slave 正在等待 SQL 线程退出，而SQL线程此时正在等待备份线程（id=6）持有的 COMMIT 锁。整个死锁过程是这样的：</p>

<ol>
  <li>备份线程执行 FTWRL，拿到 COMMIT 锁；</li>
  <li>SQL线程执行到Xid event，准备提交事务，请求 COMMIT 锁，被备份线程阻塞；</li>
  <li>用户执行 stop slave，准备停掉备库复制线程，等待 SQL 线程退出；</li>
  <li>备份线程为了获取 slave 执行位点，执行 show slave status，需要获取 <code>LOCK_active_mi</code> 锁，被用户线程（stop slave）阻塞。</li>
</ol>

<p>这次是备份线程、SQL 线程、用户线程3个线程互相持有等待，形成死锁。</p>

<p>这次并不是代码bug，算是一个用法问题，因此我们在运维过程中，如果发现 SQL 线程在 Waiting for commit lock，就不要 stop slave。</p>

<h2>死锁解决</h2>

<p>如果不可避免出现了死锁，该怎么解决呢？</p>

<p>通过上面的分析可以看到，不管是在 case 1 还是 case 2，备份线程和用户线程都不再接受响应了，要解决死锁的话，只能 kill 掉 SQL 线程了，那么直接 kill 是否有风险呢？</p>

<p>SQL 线程能执行 Xid event，说明是在更新事务引擎表，kill 掉应该没问题（事务可以回滚，之后可以重做），但是5.6有这样的一个<a href="https://github.com/mysql/mysql-server/commit/c72d8f9565d95b3f763371edffd870ddc1268a54">bug</a>，会导致SQL线程在等待 COMMIT 锁的时候被kill，直接跳过事务，这样备库会比主库少一个事务，因此 kill 后需要对比主备数据，把少的事务补上。</p>

<p>如果你使用的 MySQL 版本已经修掉这个bug，也就是在 5.6.21 版本及之后，那么 kill SQL 线程是安全的。</p>

<h2>死锁重现</h2>

<p>如果为了测试或研究代码，要想复现死锁该怎么办呢？如果直接在备库执行一个 FTWRL，很可能是复现不了的，因为FTWRL是获取2个锁，全局读锁和全局 COMMIT 锁，SQL 线程非常可能被全局读锁堵到（Waiting for global read lock），而不是被 COMMIT 锁堵（Waiting for commit lock）。</p>

<p>一种方法是写 testcase，用 dubug sync 功能设置同步点，让线程停在指定的地方，但这要求 mysqld 跑在deubg模式下，并且要求有一定的MySQL 源码开发基础；<br />
另一种方法是改代码，延长<code>do_commit</code>的时间，比如 sleep 一段时间，这样就给我们足够的时间让 FTWRL 在 SQL 线程请求 COMMIT 锁前执行完成，但是这需改代码，然后重新编译安装；<br />
如果我们不会用debug sync，又不想改代码重新编译安装，就想在已有的环境测，改怎么办呢？<a href="https://sourceware.org/systemtap/" title="systemtap">SYSTEMTAP</a>!</p>

<p>systemtap 起初只支持在内核空间进行探测，0.6 版本之后可以在用户空间进行探测，使用 systemtap 需要程序中包含 debug 信息（程序编译时加上 -g 选项）。</p>

<p>列出所有我们可以对 mysqld 进行探测的地方。</p>

<pre><code>sudo stap -L 'process("/usr/sbin/mysqld").function("*")'
</code></pre>

<p>列出所有可以对 <code>Xid_log_event</code> 类进行探测的地方。</p>

<pre><code>sudo stap -L 'process("/usr/sbin/mysqld").function("*Xid_log_event::*")'
</code></pre>

<p>如果我们想让 <code>Xid_log_event::do_commit</code> 执行有点延迟，可以这样做：</p>

<pre><code>sudo stap -v -g -d /usr/bin/mysqld --ldd  -e 'probe process(16011).function("Xid_log_event::do_commit") { printf("got it\n")  mdelay(3000) }'
</code></pre>

<p>16011 是正在跑的备库进程PID，执行上面的 stap 命令后，每当备库执行到 <code>Xid_log_event::do_commit</code> 时，stap 就会打出个 “got it”，然后 SQL 线程暂停3s，这就给了我们充足的时间去执行 FTWRL，在SQL线程 commit 前拿到 COMMIT 锁。</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
