<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 功能分析 · MySQL表定义缓存</title>
  <meta name="description" content="表定义MySQL的表包含表名，表空间、索引、列、约束等信息，这些表的元数据我们暂且称为表定义信息。对于InnoDB来说，MySQL在server层和engine层都有表定义信息。server层的表定义记录在frm文件中，而InnoDB层的表定义信息存储在InnoDB系统表中。例如:">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2015/08/10/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2015/08">
    <h1>数据库内核月报 － 2015 / 08</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2015/08/09/">
          ‹
        </a>
      </div>
    
  
  
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/01/" target="_blank">
                
                MySQL · 社区动态 · InnoDB Page Compression
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/02/" target="_blank">
                
                PgSQL · 答疑解惑 · RDS中的PostgreSQL备库延迟原因分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/03/" target="_blank">
                
                MySQL · 社区动态 · MySQL5.6.26 Release Note解读
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/04/" target="_blank">
                
                PgSQL · 捉虫动态 · 执行大SQL语句提示无效的内存申请大小
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/05/" target="_blank">
                
                MySQL · 社区动态 · MariaDB InnoDB表空间碎片整理
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/06/" target="_blank">
                
                PgSQL · 答疑解惑 · 归档进程cp命令的core文件追查
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/07/" target="_blank">
                
                MySQL · 答疑解惑 · open file limits
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/08/" target="_blank">
                
                MySQL · TokuDB · 疯狂的 filenum++
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2015/08/09/" target="_blank">
                
                MySQL · 功能分析 · 5.6 并行复制实现分析
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2015/08/10/" target="_blank">
                
                MySQL · 功能分析 · MySQL表定义缓存
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 功能分析 · MySQL表定义缓存
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>表定义</h2>
<p>MySQL的表包含表名，表空间、索引、列、约束等信息，这些表的元数据我们暂且称为表定义信息。<br />
对于InnoDB来说，MySQL在server层和engine层都有表定义信息。server层的表定义记录在frm文件中，而InnoDB层的表定义信息存储在InnoDB系统表中。例如:</p>

<pre><code class="language-text"> InnoDB_SYS_DATAFILES   
 InnoDB_SYS_TABLESTATS  
 InnoDB_SYS_INDEXES     
 InnoDB_SYS_FIELDS      
 InnoDB_SYS_TABLESPACES 
 InnoDB_SYS_FOREIGN_COLS
 InnoDB_SYS_FOREIGN     
 InnoDB_SYS_TABLES      
 InnoDB_SYS_COLUMNS     
</code></pre>

<p>注：以上都是memory表，它们内容是从实际系统表中获取的。实际上InnoDB系统表engine也是InnoDB类型的，数据也是以B树组织的。</p>

<p>在数据库每次执行sql都会访问表定义信息，如果每次都从frm文件或系统表中获取，效率会较低。因此MySQL在server层和InnoDB层都有表定义的缓存。以MySQL 5.6为例，参数table_definition_cache控制了表定义缓存中表的个数，server层和InnoDB层的表定义缓存共用此参数。</p>

<h2>server层表定义缓存</h2>

<p>server层表定义为TABLE_SHARE对象，TABLE_SHARE对象有引用计数和版本信息，每次使用flush操作会递增版本信息。<br />
server层表定义缓存由hash表和old_unused_share链表组成，通过hash表table_def_cache以表名为key缓存TABLE_SHARE对象，同时未使用的TABLE_SHARE对象通过old_unused_share链表链接。</p>

<ul>
  <li>
    <p>获取TABLE_SHARE(<code>get_table_share</code>)<br />
先从HASH查找，找不到再读取frm文件加载表定义信息。同时递增引用计数。</p>
  </li>
  <li>
    <p>释放TABLE_SHARE(<code>release_table_share</code>)<br />
递减引用计数。当引用计数为0时，如果版本发生变化，直接删除此TABLE_SHARE。</p>
  </li>
</ul>

<p>old_unused_share链表调整:</p>

<ul>
  <li>
    <p>获取TABLE_SHARE时(<code>get_table_share</code>)<br />
未使用的TABLE_SHARE对象被启用，须从LRU链表取出；<br />
如果缓存总数超出table_definition_cache大小，须依次从old_unused_share链表尾部去除。</p>
  </li>
  <li>
    <p>释放TABLE_SHARE时(<code>release_table_share</code>)<br />
当引用计数为0时，如果版本没有发生变化，将TABLE_SHARE对象加入old_unused_share链表尾部。如果缓存总数超出table_definition_cache大小，须依次从old_unused_share链表尾部去除。<br />
真正free TABLE_SHARE对象时，如果此对象还在old_unused_share链表中，须从其中去除。</p>
  </li>
</ul>

<h2>InnoDB层表定义缓存</h2>

<p>InnoDB表定义为<code>dict_table_t</code>， 缓存为<code>dict_sys_t</code>，结构如下</p>

<pre><code class="language-C">struct dict_sys_t{
    ...
    hash_table_t*    table_hash;    /*!&lt; hash table of the tables， based
                    on name */
    hash_table_t*    table_id_hash;    /*!&lt; hash table of the tables， based
                    on id */
    ulint        size;        /*!&lt; varying space in bytes occupied
                    by the data dictionary table and
                    index objects */
    dict_table_t*    sys_tables;    /*!&lt; SYS_TABLES table */
    dict_table_t*    sys_columns;    /*!&lt; SYS_COLUMNS table */
    dict_table_t*    sys_indexes;    /*!&lt; SYS_INDEXES table */
    dict_table_t*    sys_fields;    /*!&lt; SYS_FIELDS table */

    UT_LIST_BASE_NODE_T(dict_table_t)
            table_LRU;    /*!&lt; List of tables that can be evicted
                    from the cache */
    UT_LIST_BASE_NODE_T(dict_table_t)
            table_non_LRU;    /*!&lt; List of tables that can't be
                    evicted from the cache */
};
</code></pre>
<p>主要由hash表和LRU链表组成。</p>

<ul>
  <li>
    <p>两个hash表，分别按name和id，便于按name和id进行查找。</p>
  </li>
  <li>table_non_LRU：<br />
存放不放入到LRU链表的表，这些表不会从缓存中淘汰出去。那么哪些表会放入table_non_LRU链表呢？
    <ol>
      <li>系统表，如sys_tables sys_columns sys_fields SYS_INDEXES等；</li>
      <li>有引用关系的表都加入table_non_LRU(dict_foreign_add_to_cache)；</li>
      <li>有全文索引的表都加入table_non_LRU(fts_optimize_add_table)；</li>
      <li>便于删表，删表前对将表加入table_non_LRU，删表时加载表时保证表仍然在缓存中，例如表corrupted时。</li>
    </ol>
  </li>
  <li>
    <p>table_LRU<br />
不在table_non_LRU链表中的表都加入table_LRU链表中。</p>
  </li>
  <li>
    <p>dict_table_t* sys_tables 等<br />
常用系统表单独标识出来，每次使用时直接取出，不需要从hash表查找。</p>
  </li>
  <li>
    <p>LRU的维护<br />
既然存在table_LRU链表，我们就需要考虑LRU的调整：</p>

    <ol>
      <li>
        <p>将最近使用的表放入LRU头部（<code>dict_move_to_mru</code>）<br />
每次按name和id查找时都会调整，参考<code>dict_table_open_on_name</code>和<code>dict_table_open_on_id</code>。</p>
      </li>
      <li>
        <p>LRU的淘汰</p>
        <ul>
          <li>淘汰哪些表<br />
 LRU中表才可以淘汰，table_non_LRU中的表不参入淘汰。<br />
 表引用计数必须为0(<code>table-&gt;n_ref_count == 0</code>)。<br />
 表的索引被自适应哈希引用计数必须为0(<code>btr_search_t-&gt;ref_count=0</code>)。</li>
          <li>何时淘汰<br />
主线程控制每47（SRV_MASTER_DICT_LRU_INTERVAL）秒检查一次，只遍历一半LRU链表。<br />
主线程空闲时检查一次，但扫所有LRU链表，清理控制缓存表个数不能超过table_definition_cache。</li>
          <li>如何淘汰<br />
从LRU尾部开始，淘汰满足条件表(<code>dict_make_room_in_cache</code>)。</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>

<p>注：<br />
1. table_non_LRU没有实际作用，主要用于debug；<br />
2. 如果有较多引用约束的表，它们不受LRU管理，参数table_definition_cache的作用会弱化。</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
