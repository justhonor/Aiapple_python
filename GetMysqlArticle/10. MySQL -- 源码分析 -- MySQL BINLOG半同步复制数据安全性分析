<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 源码分析 · MySQL BINLOG半同步复制数据安全性分析</title>
  <meta name="description" content="半同步复制（semisynchronous replication）MySQL使用广泛的数据复制方案，相比于MySQL内置的异步复制它保证了数据的安 全，本文从主机在Server层提交事务开始一直到主机确认收到备机回复进行一步步解析，来看MySQL的半同步复制是怎么保证数 据安全的。本文基于MySQL 5.6源码...">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2017/03/07/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2017/03">
    <h1>数据库内核月报 － 2017 / 03</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2017/03/06/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2017/03/08/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/01/" target="_blank">
                
                MySQL · 引擎特性 · InnoDB IO子系统
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/02/" target="_blank">
                
                PgSQL · 特性分析 · Write-Ahead Logging机制浅析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/03/" target="_blank">
                
                MySQL · 性能优化 · MySQL常见SQL错误用法
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/04/" target="_blank">
                
                MSSQL · 特性分析 · 列存储技术做实时分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/05/" target="_blank">
                
                MySQL · 新特性分析 · 5.7中Derived table变形记
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/06/" target="_blank">
                
                MySQL · 实现分析 · 对字符集和字符序支持的实现
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2017/03/07/" target="_blank">
                
                MySQL · 源码分析 · MySQL BINLOG半同步复制数据安全性分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/08/" target="_blank">
                
                HybridDB · 性能优化 · Count Distinct的几种实现方式
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/09/" target="_blank">
                
                PgSQL · 应用案例 · PostgreSQL OLAP加速技术之向量计算
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2017/03/10/" target="_blank">
                
                MySQL · myrocks · myrocks监控信息
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 源码分析 · MySQL BINLOG半同步复制数据安全性分析
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <p>半同步复制（semisynchronous replication）MySQL使用广泛的数据复制方案，相比于MySQL内置的异步复制它保证了数据的安 全，本文从主机在Server层提交事务开始一直到主机确认收到备机回复进行一步步解析，来看MySQL的半同步复制是怎么保证数 据安全的。本文基于MySQL 5.6源码，为了简化本文只分析DML的核心的事务处理过程，并假定事务只涉及innodb存储引擎。</p>

<p><a id="org19cd87d"></a></p>

<h2>MySQL的事务提交流程</h2>

<p>在MySQL中事务的提交Server层最后会调用函数ha_commit_trans()，该函数负责处理binlog层和存储引擎层的提交，它先调用 tc_log-&gt;prepare()在引擎层生成一个XA事务，然后再调用tc_log-&gt;commit()来提交事务，这里的tc_log是在mysqld启动时就生 成的一个MYSQL_BIN_LOG类的对象。简化后代码片断类似：</p>

<pre><code>int ha_commit_trans(THD *thd, bool all, bool ignore_global_read_lock)
{
  //...
  error= tc_log-&gt;prepare(thd, all);

  if (error || (error= tc_log-&gt;commit(thd, all)))
  {
    ha_rollback_trans(thd, all);
    error= 1;
    goto end;
  }
  //...
}
</code></pre>

<p>MYSQL_BIN_LOG::prepare()函数调用ha_prepare_low()，该函数再调用存储引擎层（这里指innodb）的prepare在存储层生成XA 事务。MYSQL_BIN_LOG::commit()先在binlog层加入一个Xid_log_event类型的日志作为XA事务在binlog层提交的标志，注意这 里并没有调用操作系统的fsync。该函数最后调用会调用MYSQL_BIN_LOG::ordered_commit()，做binlog文件的磁盘fsync和提交 到存储引擎。</p>

<p>MYSQL_BIN_LOG::ordered_commit()是比较重要的函数，该函数的处理步骤如下：</p>

<ol>
  <li>将binlog数据刷写到文件中</li>
  <li>将当前的binlog文件名和位点注册到semisync模块中，以便后面等待备机的回复</li>
  <li>调用函数MYSQL_BIN_LOG::sync_binlog_file()将binlog文件sync到磁盘，到这里事务将不能回滚，即使mysqld崩溃了事务 也会最终提交。</li>
  <li>调用MYSQL_BIN_LOG::update_binlog_end_pos()更新binlog最后sync的位点信息，这时为备库复制服务的binlog dump线程 才可以读到这个事务，可参考Log_event::read_log_event()</li>
  <li>如果semisync模块配置了rpl_semi_sync_master_wait_point为 after_sync，那么当前Session将在这里等待备机回复再继 续。</li>
  <li>ordered_commit()接下来会最终调用到 ha_commit_low()在存储引擎层提交</li>
  <li>如果rpl_semi_sync_master_wait_point参数为after_commit，当前Session就会在ordered_commit()接下来调用的 MYSQL_BIN_LOG::finish_commit()函数里等待备机的回复，</li>
</ol>

<p>以上可以看出after_sync和after_commit的主要区别是，当备机确认收到日志时，主机上的该事务是否对其他session可见， after_sync是不可见（因为在存储引擎层还没有提交），after_commit是可见。after_commit可能导致在主机上被其他事务看 见了的事务在切换到备机后又消失了，所以MySQL 5.7默认使用after_sync。</p>

<p><a id="org3ad0d64"></a></p>

<h2>MySQL的事务恢复流程</h2>

<p>mysqld崩溃之后的事务恢复最终是通过MYSQL_BIN_LOG::recover()进行的，调用栈： mysqld_main() -&gt; init_server_components() -&gt; MYSQL_BIN_LOG::open() -&gt; MYSQL_BIN_LOG::open_binlog() -&gt; MYSQL_BIN_LOG::recover()。open_binlog()函数通过binlog文件头上的标志可以知道该文件在mysqld退出时没有正常关闭，然 后就调用recover()函数进行恢复。</p>

<p>MYSQL_BIN_LOG::recover()首先扫描binlog日志扫出在binlog里已经提交的事务加到一个commitlist里，然后调用 ha_recover()函数，该函数先调用innodb层的相关函数扫描出在innodb层已经prepare的事务，然后将在commitlist里的事务全 部提交。</p>

<p>从以上MySQL事务提交和恢复流程可以看出，在最终备机提交事务，必然在主机上是提交的，也就是主机的事务必然比备机更全。</p>

<p><a id="org2b4863b"></a></p>

<h2>主机和备机同步的处理流程</h2>

<p>前文已经提到在MYSQL_BIN_LOG::ordered_commit()函数中，用户session会将要等待备机回复的事务对应的binlog文件名和位 点注册到semisync模块中，然后在向备机发送binlog的主函数里mysql_binlog_send()中，将这些事务对应的binlog event数据 包加上要求备机回复的标志，见函数ReplSemiSyncMaster::updateSyncHeader()。主机在mysqld启动时就启动了一个 ack_receiver线程，每次有新的备机连接上来，就把对应的服务线程注册到ack_receiver中，见函数 ReplSemiSyncMaster::dump_start()，ack_receiver负责接收所有备机的回复。备机在handle_slave_io()函数中读到一个 event的数据包就会检查是否有要求回复的标志，如果有则在将binlog刷到本地磁盘后向主机发送回复报文，回复的报文的内容 包含收到的binlog文件名和位点。流程大致如下：</p>

<pre><code>while (!io_slave_killed(thd,mi))
{
  // ...
  event_len= read_event(mysql, mi, &amp;suppress_warnings);
  mi-&gt;repl_semisync_slave.slaveReadSyncHeader((const char*)mysql-&gt;net.read_pos + 1,
					      event_len, &amp;(mi-&gt;semi_ack), &amp;event_buf,
					      &amp;event_len);
  // ...
  if (queue_event(mi, event_buf, event_len))
    {
      mi-&gt;report(ERROR_LEVEL, ER_SLAVE_RELAY_LOG_WRITE_FAILURE,
		 ER(ER_SLAVE_RELAY_LOG_WRITE_FAILURE),
		 "could not queue event from master");
      goto err;
    }
  // ...
  if((mi-&gt;semi_ack &amp; SEMI_SYNC_NEED_ACK) &amp;&amp;
     mi-&gt;repl_semisync_slave.slaveReply(mi))
    {
      mi-&gt;report(ERROR_LEVEL, ER_SLAVE_FATAL_ERROR,
		 ER(ER_SLAVE_FATAL_ERROR),
		 "Failed to call 'slaveReply'");
      goto err;
    }
  // ...
 }
</code></pre>

<p>ack_receiver线程的主线程函数是Ack_receiver::run()，该函数调用poll()监听在所有已注册的slave服务线程的socket上， 接听slave的回复报文，当接收到一个回复报文后，ack_receiver会记下当前的回复报文中的binlog文件名和位点，并在自己的 注册列表中删除在这个位点之前的事务，然后通过cond_broadcast()唤醒等待备机回复的用户session线程，这些线程通过比较 自己的等待位点和ack_receiver记下的回复报文位点决定是否结束等待。</p>

<p><a id="org8596499"></a></p>

<h2>总结</h2>

<p>通过以上分析可以看出在同步复制的模式上，MySQL通过非常严格的流程保证了用户Session执行完事务返回给客户端后，该事 务也必然已同步到了备机的磁盘上。同时保证了出现在备机的事务必然在主机上已经是安全提交了的，也就是在任何时刻主机 上的事务一定是大于等于备机的。</p>

    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
