<!DOCTYPE html>
<html>

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MySQL · 特性分析 · drop table的优化</title>
  <meta name="description" content="背景">

  <link rel="stylesheet" href="/monthly/css/typo.css">
  <link rel="stylesheet" href="/monthly/css/animate.css">
  <link rel="stylesheet" href="/monthly/css/main.css">
  <link rel="canonical" href="http://mysql.taobao.org//monthly/2016/01/07/">
  <link rel="alternate" type="application/rss+xml" title="数据库内核月报" href="http://mysql.taobao.org//monthly/feed.xml" />

  <link rel="stylesheet" href="//cdn.staticfile.org/highlight.js/8.3/styles/tomorrow.min.css">
  <script src="/monthly/js/highlight.min.js"></script>
  <!-- <link rel="stylesheet" href="/monthly/themes/tomorrow.css">
  <script src="/monthly/highlight/highlight.pack.js"> -->
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.staticfile.org/jquery/1.11.1/jquery.min.map"></script>

  <script src="/monthly/scripts/changeTarget.js"></script>
  
</head>


<!-- Google Analysis -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-62056244-1', 'auto');
  ga('send', 'pageview');
</script>


  <body>

    <header>

  <a id="go-back-home" href="/monthly/2016/01">
    <h1>数据库内核月报 － 2016 / 01</h1>
  </a>

</header>


        <section class="paging">
  
  
  

  
    
      <div class="left">
        <a href="/monthly/2016/01/06/">
          ‹
        </a>
      </div>
    
  
  
    
      <div class="right">
        <a href="/monthly/2016/01/08/">
          ›
        </a>
      </div>
    
  
</section>


<div id = "container" class = "animated zoomIn">
  <div class="block">
  <nav id="primary_nav_wrap">
<ul>
  <li><a href="#">当期文章</a>
    <ul  class = "animated">
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/01/" target="_blank">
                
                MySQL · 引擎特性 · InnoDB 事务锁系统简介
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/02/" target="_blank">
                
                GPDB &nbsp; · 特性分析· GreenPlum Primary/Mirror 同步机制
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/03/" target="_blank">
                
                MySQL · 专家投稿 · MySQL5.7 的 JSON 实现
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/04/" target="_blank">
                
                MySQL · 特性分析 · 优化器 MRR & BKA
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/05/" target="_blank">
                
                MySQL · 答疑解惑 · 物理备份死锁分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/06/" target="_blank">
                
                MySQL · TokuDB · Cachetable 的工作线程和线程池
              </a>
            </li>
          
      
          
          

          
            
              <li class="current-menu-item">
            
              <a href="/monthly/2016/01/07/" target="_blank">
                
                MySQL · 特性分析 · drop table的优化
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/08/" target="_blank">
                
                MySQL · 答疑解惑 · GTID不一致分析
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/09/" target="_blank">
                
                PgSQL · 特性分析 · Plan Hint
              </a>
            </li>
          
      
          
          

          
            
              <li>
            
              <a href="/monthly/2016/01/10/" target="_blank">
                
                MariaDB · 社区动态 · MariaDB on Power8 (下)
              </a>
            </li>
          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
          
          

          
      
    </ul>
  </li>
</ul>
</nav>

    <div class="title">
      <h2>
        
        MySQL · 特性分析 · drop table的优化
      </h2>
    </div>
  </div>
  <div class="content typo">
    <section class="post">
      <h2>背景</h2>

<p>系统为了加速对象的访问，通常都会增加一层缓存，以缓解下一层IO的瓶颈，OS的page cache和数据库的buffer pool都基于此。</p>

<p>但对象的删除，如果同步清理对象的缓存的话，不仅大大增加了延时，同时可能因为缓存过大导致IO blooding。所以针对缓存的清理，都会采用lazy drop的优化，下面我们就来对比下percona和官方针对drop table的lazy drop 优化。</p>

<p>假设使用<code>innodb_file_per_table</code>为表创建独立的tablespace，在业务处理过程中，有删除表的动作，会发现<code>drop table</code>操作不仅仅持续比较长，而且在删除过程中，实例的QPS也有所降低，主要是因为在清理buffer pool过程中，持有buffer pool的mutex导致，percona server在5.1版本开始引入 <code>lazy drop table</code>来消除drop table过程中带来的影响，但也并没有完全消除，MySQL 官方在5.5.23以后也引入了 <code>lazy drop table</code> 来优化drop 操作，下面我们就来对比一下这两种方式的差异。</p>

<p>值得一提的是：在日常的运维中，drop的操作并非核心需求，我们也都建议DBA在 off-peak 时间去做这样的操作。</p>

<h2>同步模式</h2>

<p>在讨论lazy模式之前，我们先看看MySQL在5.5.23版本之前的处理方式即同步模式:<br />
当要drop table的时候，会在整个操作过程中持有buffer pool的mutex，然后扫描两次LRU链表，把属于这个table的page失效掉，buffer pool中page的个数越多，持有mutex时间就会越长，对在线业务的影响也就越明显。</p>

<p>简短看下核心处理代码:</p>

<pre><code>fil_delete_tablespace
buf_LRU_invalidate_tablespace(
     ulint     id)     /*!&lt; in: space id */
{
     ulint     i;()
     for (i = 0; i &lt; srv_buf_pool_instances; i++) {
          buf_pool_t*     buf_pool;

          buf_pool = buf_pool_from_array(i);
          buf_LRU_drop_page_hash_for_tablespace(buf_pool, id);
          buf_LRU_invalidate_tablespace_buf_pool_instance(buf_pool, id);
     }
}
</code></pre>

<ol>
  <li><code>buf_LRU_drop_page_hash_for_tablespace</code>会扫描一次LRU list，需要从adaptive hash中删除对要删除的表的page的引用；</li>
  <li><code>buf_LRU_invalidate_tablespace_buf_pool_instance</code>会扫描一次LRU list:<br />
 如果是dirty block，需要从flush list remove掉，然后从page hash中删除，最后从LRU list中删除。</li>
</ol>

<p>可以看到，这种同步清理掉内存结构的操作，在业务高峰期，对系统的吞吐能力会产生不小的波动。</p>

<h2>Percona lazy模式</h2>

<p>percona实现了一个<code>lazy drop table</code>模式，使用参数控制：</p>

<pre><code>mysql&gt; show global variables like '%lazy%';
+------------------------+-------+
| Variable_name          | Value |
+------------------------+-------+
| innodb_lazy_drop_table | 0     |
+------------------------+-------+
</code></pre>

<p>其处理drop table的过程如下:</p>

<ol>
  <li>持有buffer pool的lru list mutex锁；</li>
  <li>开始扫描LRU list中的page；
    <ol>
      <li>如果这个page属于要删除的table的，就设置一个flag，表示这个page所在的表正在被删除</li>
    </ol>
  </li>
  <li>释放lru list mutex锁；</li>
  <li>持有一个adaptive hash index的shared latch；</li>
  <li>开始扫描buffer pool中的block；</li>
  <li>如果这个page被AHI索引；
    <ol>
      <li>释放AHI 锁</li>
      <li>持有page的exclusive lock</li>
      <li>删除AHI中索引这个page的entries</li>
      <li>释放page锁</li>
      <li>持有AHI的shared lock进行下一个page的判断</li>
    </ol>
  </li>
</ol>

<p>相比较同步模式，Percona的lazy drop table在扫描lru list过程中，只set了一个flag，随后在lru正常的淘汰过程中或者flush dirty block的时候如果碰到这中block，直接就做删除处理了，这也就是lazy的核心。</p>

<p>其核心代码如下：</p>

<pre><code>buf_LRU_mark_space_was_deleted(
     ulint     id)     /*!&lt; in: space id */
{
     ulint     i;

/* 这一部分代码就是持有lru链表mutex，进行第一步，第二步操作。*/
     for (i = 0; i &lt; srv_buf_pool_instances; i++) {
          mutex_enter(&amp;buf_pool-&gt;LRU_list_mutex);
          while (bpage != NULL) {
               if (buf_page_get_space(bpage) == id)
                    bpage-&gt;space_was_being_deleted = TRUE;
          }
          mutex_exit(&amp;buf_pool-&gt;LRU_list_mutex);

/* 这里扫描的是buf_pool中的chunk，也就是启动的时候，根据buffer pool的大小预分配好的blocks，不能更改，
   所以并不需要持有buffer pool mutex，或者lru list mutex。
*/
          btr_search_s_lock_all();
          chunk = buf_pool-&gt;chunks;
          for (j = buf_pool-&gt;n_chunks; j--; chunk++) {
               buf_block_t*     block     = chunk-&gt;blocks;
               for (k = chunk-&gt;size; k--; block++) {
                    if (buf_block_get_state(block)
                        != BUF_BLOCK_FILE_PAGE
                        || !block-&gt;index
                        || buf_page_get_space(&amp;block-&gt;page) != id) {
                         continue;
                    }
/* 这里把AHI的锁释放掉了，但在btr_search_drop_page_hash_index中会持有AHI的lock对AHI结构进行变更。*/
                    btr_search_s_unlock_all();
                    rw_lock_x_lock(&amp;block-&gt;lock);
                    btr_search_drop_page_hash_index(block, NULL);
                    rw_lock_x_unlock(&amp;block-&gt;lock);

                    btr_search_s_lock_all();
               }
          }
          btr_search_s_unlock_all();
     }
}
</code></pre>

<h2>MySQL lazy模式</h2>

<p>在MySQL 5.5.23以后的版本，也实现了一个<code>lazy drop table</code>的方式，和percona的方式有所区别，下面来看一下具体的过程：</p>

<ol>
  <li>持有<code>buffer pool mutex</code>；</li>
  <li>持有buffer pool中的<code>flush list mutex</code>；</li>
  <li>开始扫描flush list；
    <ol>
      <li>如果dirty page属于drop table，那么就直接从flush list中remove掉；</li>
      <li>如果删除的page个数超过了<code>#define BUF_LRU_DROP_SEARCH_SIZE     1024</code>  这个数目的话，释放<code>buffer pool  mutex</code>，<code>flush list mutex</code>，释放cpu资源；
        <ul>
          <li>释放<code>flush list mutex</code>；</li>
          <li>释放<code>buffer pool mutex</code>；</li>
          <li>强制通过pthread_yield进行一次OS context switch，释放剩余的cpu时间片；</li>
        </ul>
      </li>
      <li>重新持有<code>buffer pool mutex</code>；</li>
      <li>重新持有<code>flush list mutext</code>；</li>
    </ol>
  </li>
  <li>释放<code>flush list mutex</code>；</li>
  <li>释放<code>buffer pool mutex</code>；</li>
</ol>

<p>相比较percona的lazy方式，这里扫描的是dirty block，在LRU list中进行淘汰的时候，就不再判断当前fil_space是否存在的问题了，因为不牵涉到写入。</p>

<p>这里边有两个相关的bug，<a href="http://bugs.mysql.com/bug.php?id=51325">bug#51325</a>、<a href="http://bugs.mysql.com/bug.php?id=64284">bug#64284</a>，有兴趣可以参考一下。</p>

<p>其核心的代码如下：</p>

<pre><code>buf_LRU_flush_or_remove_pages(id, BUF_REMOVE_FLUSH_NO_WRITE, 0);

buf_pool_mutex_enter(buf_pool);

err = buf_flush_or_remove_pages(buf_pool, id, flush, trx);
......
buf_pool_mutex_exit(buf_pool);

/* BUF_REMOVE_FLUSH_NO_WRITE：意思表示，只对dirty block进行remove操作，不做写入。
</code></pre>

<h2>对比</h2>

<p>从上面的percona和oracle的MySQL版本比较来看，percona是持有了<code>LRU list mutex</code>和<code>AHI lock</code>，而MySQL官方版本是持有了<code>buffer pool mutex</code>和<code>flush list mutex</code>，从锁的保护范围来看，<code>buffer pool mutex</code>直观上瓶颈会比较明显，但具体还要跟表的大小、dirty block的比例来看，如果dirty block比较少的话，官方版本并不扫描LRU list，所以可能持有的时间并不会太久。</p>

<p>Percona的开发人员还针对这两个不同版本进行了Benchmarks， 大家可以看下他们测试出来的结果:</p>

<p>这个图是 MySQL 官方版本测试在系统压力下，进行频繁drop table的系统抖动:</p>

<!-- _includes/image.html -->
<div class="image-wrapper">
    

    
        <img src="/monthly/pic/2016-01-07/oracle_mysql.png" alt="MySQL官方" />
    

    

    
</div>

<p>这个图是 Percona 版本测试在系统压力下，进行频繁drop table的系统抖动:</p>

<!-- _includes/image.html -->
<div class="image-wrapper">
    

    
        <img src="/monthly/pic/2016-01-07/percona_mysql.png" alt="Percona版本" />
    

    

    
</div>

<p>但对于这样的测试，小编想说，哪个DBA/开发人员这么变态，要这么频繁的drop table -_-||</p>


    </section>
  </div>
</div>


    <footer>
  <a href="http://mysql.taobao.org/" target="_blank" class="muted">阿里云RDS-数据库内核组</a>
  <br>
  <a href="https://github.com/alibaba/AliSQL" target="_blank" class="muted">欢迎在github上star AliSQL</a>
</br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">知识共享署名-非商业性使用-相同方式共享 3.0 未本地化版本许可协议</a>进行许可。
</footer>

<script type="text/javascript">
  jQuery(document).ready(function($){
    // browser window scroll (in pixels) after which the "back to top" link is shown
    var offset = 300,
      //browser window scroll (in pixels) after which the "back to top" link opacity is reduced
      offset_opacity = 1200,
      //duration of the top scrolling animation (in ms)
      scroll_top_duration = 700,
      //grab the "back to top" link
      $back_to_top = $('.cd-top');

    //hide or show the "back to top" link
    $(window).scroll(function(){
      ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');
      if( $(this).scrollTop() > offset_opacity ) {
        $back_to_top.addClass('cd-fade-out');
      }
    });

    //smooth scroll to top
    $back_to_top.on('click', function(event){
      event.preventDefault();
      $('body,html').animate({
        scrollTop: 0 ,
        }, scroll_top_duration
      );
    });

  });
</script>



    <a href="#0" class="cd-top"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="10px"
   width="38px" height="60px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
      <polygon fill="#FFFFFF" points="8,2.8 16,10.7 13.6,13.1 8.1,7.6 2.5,13.2 0,10.7 "/>
    </svg>
    </a>
  </body>

</html>
